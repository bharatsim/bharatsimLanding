(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{126:function(e,a,t){e.exports=t(156)},136:function(e,a,t){},137:function(e,a,t){},138:function(e,a,t){},139:function(e,a,t){e.exports=t.p+"static/media/au_gautam_menon.86d07df5.jpg"},140:function(e,a,t){e.exports=t.p+"static/media/au_debayan_gupta.c73b7c46.jpg"},141:function(e,a,t){e.exports=t.p+"static/media/au_bhavesh_neekhra.81f816d1.jpg"},142:function(e,a,t){e.exports=t.p+"static/media/au_philip_cherian.d0c6e0fd.jpg"},143:function(e,a,t){e.exports=t.p+"static/media/tw_jayanta_kshirsagar.60f34a4d.jpg"},144:function(e,a,t){e.exports=t.p+"static/media/tw_praveen_ninawe.290fc022.jpg"},145:function(e,a,t){e.exports=t.p+"static/media/tw_harshal_hayatnagarkar.a31181d1.jpg"},146:function(e,a,t){e.exports=t.p+"static/media/tw_chhaya_yadav.d3789806.jpg"},147:function(e,a,t){e.exports=t.p+"static/media/components_synthpop.947cd47d.png"},148:function(e,a,t){e.exports=t.p+"static/media/components_simulation_engine.05fcb2c2.png"},149:function(e,a,t){e.exports=t.p+"static/media/components_visualization_engine.1d1d09d5.png"},150:function(e,a,t){e.exports=t.p+"static/media/components_se_graph.cbd641b3.png"},151:function(e,a,t){e.exports=t.p+"static/media/components_se_nodes.42547dd8.png"},152:function(e,a,t){e.exports=t.p+"static/media/components_se_relations.dabaf314.png"},153:function(e,a,t){e.exports=t.p+"static/media/components_se_person.9d71bac0.png"},154:function(e,a,t){e.exports=t.p+"static/media/components_se_schedules.a61fee10.png"},155:function(e,a,t){e.exports=t.p+"static/media/components_viz_mumbai.dd34b16b.gif"},156:function(e,a,t){"use strict";t.r(a);var n=t(1),l=t.n(n),r=t(84),i=t.n(r),c=t(81),o=t(7),s=t(14),m=t(66),u=Object(m.a)({config:{initialColorMode:"light",useSystemColorMode:!1,space:[0,4,8,16,32,64,128,256,512]}}),d=t(46),h=t(160),p=t(174),E=t(162),g=t(173),f=t(164),b=t(165),y=t(175);var w=t(15);var v=t(2);var k=t(57),x=t.n(k),_=["children","isLast","flag","to"],S=["children","isLast","to"],C=function(e){var a=e.children,t=e.isLast,n=e.flag,r=e.to,i=void 0===r?"/":r,c=Object(d.a)(e,_);return l.a.createElement(l.a.Fragment,null,"current_tab"==n?l.a.createElement(f.a,Object.assign({mb:{base:t?0:8,sm:0},mr:{base:0,sm:t?0:8},display:"block"},c,{borderBottom:"2px",borderBottomColor:"white"}),l.a.createElement(o.b,{to:i},a)," "):l.a.createElement(f.a,Object.assign({mb:{base:t?0:8,sm:0},mr:{base:0,sm:t?0:8},display:"block"},c),l.a.createElement(o.b,{to:i},a)))},j=function(e){var a=e.children,t=e.isLast,n=e.to,r=void 0===n?"/":n,i=Object(d.a)(e,S);return l.a.createElement(f.a,Object.assign({mb:{base:t?0:8,sm:0},mr:{base:0,sm:t?0:8},display:"block"},i),l.a.createElement(o.b,{href:r,isExternal:!0},a))},T=function(){return l.a.createElement("svg",{width:"24",viewBox:"0 0 18 18",xmlns:"http://www.w3.org/2000/svg"},l.a.createElement("title",null,"Close"),l.a.createElement("path",{fill:"white",d:"M9.00023 7.58599L13.9502 2.63599L15.3642 4.04999L10.4142 8.99999L15.3642 13.95L13.9502 15.364L9.00023 10.414L4.05023 15.364L2.63623 13.95L7.58623 8.99999L2.63623 4.04999L4.05023 2.63599L9.00023 7.58599Z"}))},z=function(){return l.a.createElement("svg",{width:"24px",viewBox:"0 0 20 20",xmlns:"http://www.w3.org/2000/svg",fill:"white"},l.a.createElement("title",null,"Menu"),l.a.createElement("path",{d:"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z"}))},A=function(e){var a=l.a.useState(!1),t=Object(w.a)(a,2),n=t[0],r=t[1],i=(Object(s.e)(),l.a.useState("")),c=Object(w.a)(i,2),m=(c[0],c[1],Object(s.f)());return l.a.createElement(l.a.Fragment,null,m&&l.a.createElement(h.a,Object.assign({as:"nav",align:"center",justify:"space-between",wrap:"wrap",w:"100%",mb:8,p:2,bg:["primary.500","primary.500","transparent","transparent"],color:["white","white","primary.700","primary.700"]},e),l.a.createElement(h.a,{align:"start"},l.a.createElement(o.b,{m:-3,p:3,to:"/"},l.a.createElement(b.a,{size:"sm"},l.a.createElement(y.a,{width:"250px",src:x.a})))),l.a.createElement(b.a,{display:{base:"block",md:"none"},onClick:function(){return r(!n)}},n?l.a.createElement(T,null):l.a.createElement(z,null)),l.a.createElement(b.a,{display:{base:n?"block":"none",md:"block"},flexBasis:{base:"100%",md:"auto"}},l.a.createElement(h.a,{align:"center",justify:["center","space-between","flex-end","flex-end"],direction:["column","row","row","row"],pt:[4,4,0,0]},"/"===m.pathname.toString()?l.a.createElement(C,{to:"/",flag:"current_tab"}," Home"):l.a.createElement(l.a.Fragment,null,l.a.createElement(C,{to:"/",flag:""},"  Home")),"/components"===m.pathname.toString()||"/simulation_engine"===m.pathname.toString()||"/viz_engine"===m.pathname.toString()||"/synthetic_population"===m.pathname.toString()?l.a.createElement(C,{to:"/components",flag:"current_tab"}," Components "):l.a.createElement(l.a.Fragment,null,l.a.createElement(C,{to:"/components",flag:""}," Components ")),l.a.createElement(C,{to:"/publications"}," Publications "),"/people"===m.pathname.toString()?l.a.createElement(C,{to:"/people",flag:"current_tab"}," People "):l.a.createElement(C,{to:"/people",flag:""}," People "),l.a.createElement(j,{to:"https://documentation.com",isLast:!0},l.a.createElement("a",{href:"https://bharatsim.readthedocs.io",target:"_blank"},l.a.createElement(g.a,{size:"md",rounded:"md",color:["primary.500","primary.500","white","white"],bg:["#2D3748","#2D3748","primary.500","primary.500"],_hover:{bg:["primary.600","primary.100","primary.600","primary.600"]},onClick:function(){return window.open("https://bharatsim.readthedocs.io","_blank")}},"Documentation")))))))},I=(t(163),t(167)),F=t(45),P=t(52);function W(e){return l.a.createElement(h.a,Object.assign({direction:"column",align:"center",m:"0 auto"},e,{minH:"98vh"}),l.a.createElement(A,{bg:"#392F74"}),e.children)}var M=t(168);t(136);function B(){return l.a.createElement(l.a.Fragment,null,l.a.createElement(I.a,{maxW:"3xl"},l.a.createElement(p.b,{as:b.a,textAlign:"center",spacing:{base:8,md:5},py:{base:5,md:30}},l.a.createElement(E.a,{fontWeight:600,fontSize:{base:"xl",sm:"3xl",md:"4xl"},lineHeight:"110%",fontFamily:"Lato",id:"LandingTitle"},l.a.createElement(f.a,{as:"span",color:"#2D3748"},"BharatSim")),l.a.createElement(f.a,{color:"white.500",p:1,fontWeight:300,fontSize:"xl",fontFamily:"Inter",textAlign:"justify"},"  ",l.a.createElement("span",{style:{color:"#2D3748",fontWeight:"600"}}," BharatSim"),"  is a open-source collaborative project between ",l.a.createElement("span",{style:{color:"#2D3748",fontWeight:"600"}}," Ashoka University ")," and ",l.a.createElement("span",{style:{color:"#2D3748",fontWeight:"600"}}," Thoughtworks"),", funded by the ",l.a.createElement("span",{style:{color:"#2D3748",fontWeight:"600"}},"Bill & Melinda Gates Foundation")," and ",l.a.createElement("span",{style:{color:"#2D3748",fontWeight:"600"}},"Mphasis"),".",l.a.createElement("br",null),l.a.createElement("br",null),"BharatSim provides a distributed, multi-scale, simulation framework for agent-based models. It was originally designed to model the epidemiological dynamics of the COVID-19 pandemic in India, including the social determinants of disease.   BharatSim is easily extended to describe other communicable as well as non-communicable diseases.",l.a.createElement("br",null),l.a.createElement("br",null),"BharatSim is versatile. In addition to disease modelling, it may be used to study a wide range of social phenomena.",l.a.createElement("br",null),l.a.createElement("br",null)),l.a.createElement(p.b,{direction:"row",spacing:3,align:"center",alignSelf:"center",position:"relative"},l.a.createElement(g.a,{colorScheme:"blue",bg:"#2D3748",rounded:"full",px:6,_hover:{bg:"primary"}},l.a.createElement(o.b,{to:"/components"}," Get Started ")),l.a.createElement(g.a,{colorScheme:"blue",bg:"#00c0b5ff",rounded:"full",px:6,_hover:{bg:"primary"},onClick:function(){return window.open("https://github.com/debayanLab/BharatSim","_blank")}},"GitHub")))))}Object(M.a)({displayName:"Arrow",viewBox:"0 0 72 24",path:l.a.createElement("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M0.600904 7.08166C0.764293 6.8879 1.01492 6.79004 1.26654 6.82177C2.83216 7.01918 5.20326 7.24581 7.54543 7.23964C9.92491 7.23338 12.1351 6.98464 13.4704 6.32142C13.84 6.13785 14.2885 6.28805 14.4722 6.65692C14.6559 7.02578 14.5052 7.47362 14.1356 7.6572C12.4625 8.48822 9.94063 8.72541 7.54852 8.7317C5.67514 8.73663 3.79547 8.5985 2.29921 8.44247C2.80955 9.59638 3.50943 10.6396 4.24665 11.7384C4.39435 11.9585 4.54354 12.1809 4.69301 12.4068C5.79543 14.0733 6.88128 15.8995 7.1179 18.2636C7.15893 18.6735 6.85928 19.0393 6.4486 19.0805C6.03792 19.1217 5.67174 18.8227 5.6307 18.4128C5.43271 16.4346 4.52957 14.868 3.4457 13.2296C3.3058 13.0181 3.16221 12.8046 3.01684 12.5885C2.05899 11.1646 1.02372 9.62564 0.457909 7.78069C0.383671 7.53862 0.437515 7.27541 0.600904 7.08166ZM5.52039 10.2248C5.77662 9.90161 6.24663 9.84687 6.57018 10.1025C16.4834 17.9344 29.9158 22.4064 42.0781 21.4773C54.1988 20.5514 65.0339 14.2748 69.9746 0.584299C70.1145 0.196597 70.5427 -0.0046455 70.931 0.134813C71.3193 0.274276 71.5206 0.70162 71.3807 1.08932C66.2105 15.4159 54.8056 22.0014 42.1913 22.965C29.6185 23.9254 15.8207 19.3142 5.64226 11.2727C5.31871 11.0171 5.26415 10.5479 5.52039 10.2248Z",fill:"currentColor"})});var H=t(176),N=t(169),D=t(61),L=t.n(D),O=function(e){var a=e.children;return l.a.createElement(f.a,{fontWeight:"500",fontSize:"lg",mb:2},a)};function G(){return l.a.createElement(b.a,{bg:Object(v.useColorModeValue)("#2d3748","gray.50"),color:Object(v.useColorModeValue)("white","white.200")},l.a.createElement(I.a,{as:p.b,maxW:"8xl",py:10},l.a.createElement(H.a,{templateColumns:{sm:"1fr 1fr",md:"4fr 2fr 3fr 6fr"},spacing:2},l.a.createElement(p.b,{spacing:6,align:"flex-center"},l.a.createElement(b.a,null,l.a.createElement(y.a,{width:"250px",src:L.a})),l.a.createElement(f.a,{fontSize:"sm"},"\xa9 2022 BharatSim. All rights reserved")),l.a.createElement(p.b,{align:"flex-center"},l.a.createElement(O,null,"Community"),l.a.createElement(p.b,{direction:"row",spacing:2},l.a.createElement(N.a,{mt:1},l.a.createElement(F.a,null)),l.a.createElement(N.a,{href:"https://github.com/bharatsim"},"GitHub")),l.a.createElement(p.b,{direction:"row",spacing:2},l.a.createElement(N.a,{mt:1},l.a.createElement(F.b,null)),l.a.createElement(N.a,{href:"#"},"Coming soon"))),l.a.createElement(p.b,{align:"flex-center"},l.a.createElement(O,null,"Contact"),l.a.createElement(N.a,{href:"#",fontWeight:500},"For users: "),l.a.createElement(N.a,null,"To be updated"),l.a.createElement(N.a,{href:"#",fontWeight:500},"For developers: "),l.a.createElement(N.a,null,"To be updated")),l.a.createElement(p.b,{align:"flex-center"},l.a.createElement(O,null,"License"),l.a.createElement("p",null,"By exercising the Licensed Rights defined under the CC4 license, you accept and agree to be bound by the terms and conditions of Creative Commons Attribution 4.0 International Public License.")))))}function V(){return l.a.createElement(c.a,{theme:u},l.a.createElement(W,null,l.a.createElement(B,null)),l.a.createElement(G,null))}t(137);t(138);var U=t(88),q=t(170);function R(e){var a=e.name,t=e.title,n=e.email,r=e.img_url,i="mailto:"+n;return l.a.createElement(h.a,{p:5,w:"full",alignItems:"center",justifyContent:"center"},l.a.createElement(b.a,{w:"310px",h:"400px",mx:"auto",my:"auto",bg:Object(v.useColorModeValue)("white","#351B59"),shadow:"lg",rounded:"lg",overflow:"hidden"},l.a.createElement(y.a,{w:"full",boxSize:"350px",h:56,objectFit:"contain",objectPosition:"center",src:r,alt:"avatar"}),l.a.createElement(b.a,{py:4,px:6},l.a.createElement(f.a,{fontSize:"xl",fontWeight:"bold",color:Object(v.useColorModeValue)("gray.800","white")},a),l.a.createElement(f.a,{py:2,color:Object(v.useColorModeValue)("gray.700","gray.400")},t),l.a.createElement(h.a,{alignItems:"center",mt:4,color:Object(v.useColorModeValue)("gray.700","gray.200"),pb:2},l.a.createElement(U.a,{as:P.a,h:6,w:6,mr:2}),l.a.createElement(N.a,{href:i,isExternal:!0},l.a.createElement(f.a,{px:2,fontSize:"sm"},n))))))}var K=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"topContainer-people"},l.a.createElement(h.a,{direction:"column"},l.a.createElement(q.a,null,l.a.createElement(f.a,{fontSize:"xl",fontWeight:700}," Ashoka University Team")),l.a.createElement(h.a,{direction:"row"},l.a.createElement(R,{name:"Gautam Menon",title:"Professor of Physics and Biology",img_url:t(139),email:"gautam.menon@ashoka.edu.in"}),l.a.createElement(R,{name:"Debayan Gupta",title:"Assistant Professor of Computer Science",img_url:t(140),email:"debayan.gupta@ashoka.edu.in"}),l.a.createElement(R,{name:"Bhavesh Neekhra",title:"Graduate Student, Computer Science",img_url:t(141),email:"bhavesh.neekhra_phd18@ashoka.edu.in"}),l.a.createElement(R,{name:"Philip Cherian",title:"Graduate Student, Physics",img_url:t(142),email:"philip.cherian@ashoka.edu.in"})),l.a.createElement("br",null),l.a.createElement("br",null),l.a.createElement(q.a,null,l.a.createElement(f.a,{fontSize:"xl",fontWeight:700}," Thoughtworks Team")),l.a.createElement(h.a,{direction:"row"},l.a.createElement(R,{name:"Jayanta Kshirsagar",title:"Engineering for Research",img_url:t(143),email:"jayantak@thoughtworks.com"}),l.a.createElement(R,{name:"Praveen Ninawe",title:"Engineering for Research",img_url:t(144),email:"praveen.ninawe@thoughtworks.com"}),l.a.createElement(R,{name:"Harshal Hayatnagarkar",title:"Engineering for Research",img_url:t(145),email:"harshalh@thoughtworks.com"}),l.a.createElement(R,{name:"Chhaya Yadav",title:"Engineering for Research",img_url:t(146),email:"chhayay@thoughtworks.com"})))))},J=t(171);function Z(e){return l.a.createElement(h.a,{px:2,pb:4,bg:"transparent",direction:"column",w:"full",justify:"space-around"},l.a.createElement(b.a,{maxW:"5xl",mx:"auto",minH:"700px",bg:Object(v.useColorModeValue)("white","gray.800"),shadow:"lg",rounded:"lg"},l.a.createElement(b.a,{minH:"10%"},l.a.createElement(y.a,{w:"350px",h:"300px",mt:"20%",p:"5%",objectFit:"contain",src:e.imageUrl,alt:"img1"})),l.a.createElement(J.a,null),l.a.createElement(b.a,{px:4,py:2},l.a.createElement(f.a,{color:Object(v.useColorModeValue)("gray.800","white"),fontWeight:"bold",fontSize:"2xl"},e.title),l.a.createElement(f.a,{mt:1,mb:1,fontSize:"sm",color:Object(v.useColorModeValue)("gray.600","gray.400")},e.body),l.a.createElement(b.a,{mt:7,mb:4},l.a.createElement(o.b,{to:e.external_link},l.a.createElement(g.a,{bg:"gray.900",color:"gray.100",px:5,py:3,fontWeight:"semibold",rounded:"lg",_hover:{bg:"black.800"},to:e.external_link},"Read More"))))))}var X=function(e){return l.a.createElement(I.a,{w:"full",maxW:"6xl"},l.a.createElement(p.a,{spacing:2},l.a.createElement(Z,{imageUrl:t(147),external_link:"/synthetic_population",title:"The Synthetic Population",body:"A synthetic representation of the Indian population in each district containing for each agent attributes like home and work locations, age, and gender."}),l.a.createElement(Z,{imageUrl:t(148),external_link:"/simulation_engine",title:"The Simulation Engine",body:"A simulation framework to model agents with heteregenous attributes and in a realistic geographical background."}),l.a.createElement(Z,{imageUrl:t(149),external_link:"/viz_engine",title:"The Visualization Engine",body:" A web app that enables visualization of the output of the simulation engine and the synthetic population."})))},Y=t(31);var Q=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement(c.a,{theme:u},l.a.createElement(A,{bg:"#392F74"})),l.a.createElement(q.a,null,l.a.createElement(I.a,{maxW:"container.xl",flexDirection:"column",ml:3,mr:3},l.a.createElement(q.a,null,l.a.createElement(f.a,{p:2,m:2,align:"justify"},l.a.createElement(q.a,null,l.a.createElement(E.a,{size:"lg",p:2},"The Simulation Engine")),l.a.createElement("br",null),"Mathematical and computational approaches to the dynamics of an infectious disease have a long history. Models first described by Kermack and McKendrick  describe the how fractions of susceptible (S), infectious (I) and recovered (R) individuals of a population change over time. The dynamics of S, I and R are prescribed through coupled non-linear ordinary differential equations. Compartmental models ignore all variation at the individual level, and also assume that the population is well-mixed. Such models neglect complications associated with spatial variations in incidence and elide the interplay of social factors, such as family sizes, community networks and socio-economic status on disease dynamics. ",l.a.createElement("br",null),l.a.createElement("br",null),"Beyond compartmental models, network and agent-based (equivalently individual-based) approaches implement individual-level granularity. Realistic networks describing the interactions between people can contain a few highly connected nodes. Targeting such nodes, ``super-spreaders'' in the context of infectious disease dynamics, can have an overwhelmingly large effect compared to interventions that treat all nodes equivalently. Both network and agent-based models require many more assumptions, especially regarding the nature of contacts that lead to infection. However, they provide a more detailed way of understanding disease dynamics than is possible through compartmental models. They can thus also be used to assess the effects of targeted interventions, such as lock-downs and restrictions on public transport, in a more precise way.",l.a.createElement("br",null),l.a.createElement("br",null),"A number of agent-based models have been used to study disease dynamics. There are relatively few such models for India. One, the IISc-TIFR city-based simulator, has been used to model COVID-19 spread in the major Indian cities of Bengaluru and Mumbai.  Results from these models include the evaluation of strategies for reopening public transport in the background of an epidemic at different stages of its trajectory as well as studies of the impact of lock-downs and related interventions.",l.a.createElement("br",null),l.a.createElement("br",null),"The agent-based simulation framework described here, BharatSim, defines and uses a more detailed description of the population than those in earlier work. Additionally, BharatSim is a framework, i.e. it provides a mechanism for users to address specific requirements easily instead of being forced to modify a large, existing base of code. While applications are designed to respond to a specific question, a simulation framework is more general. The simulation framework thus insulates the user from unnecessary implementation details, while providing them with sufficient flexibility.",l.a.createElement("br",null),l.a.createElement("br",null),"BharatSim defines and uses a synthetic population that is a detailed and granular description of the population that is also statistically faithful. The simulation engine accepts this population as a CSV file. Additionally, the engine was designed so that it would be able to scale up to large population sizes without significant overhead or degradation in speed, given that one use of BharatSim would be to simulate populations of the size of an average Indian state, which also required the framework to implement efficient data structures and algorithms. Finally, we intended that BharatSim be usable on a range of conventionally available hardware ranging from personal laptops to High Performance Computing (HPC) clusters. Flexibility was another design imperative: we wanted modellers from a range of backgrounds, perhaps even lacking significant programming experience, to be able to easily define a new model and add further levels of abstraction, thus extending the framework in new ways.")),l.a.createElement("br",null),l.a.createElement(E.a,{size:"md",m:2,p:2},"Structure of the simulation engine"),l.a.createElement(q.a,null,l.a.createElement(f.a,{p:2,m:2,align:"justify"},l.a.createElement(b.a,{p:2,m:2,backgroundColor:"white"},l.a.createElement(q.a,null,l.a.createElement(y.a,{width:"70%",ml:"7%",mr:"7%",pt:"4%",pb:"4%",src:t(150)}))),"All data in the simulation engine is stored in a ",l.a.createElement("b",null,"Graph"),". This graph is a network of nodes which can represent both individual agents as well as locations such as households or offices. The framework defines a ",l.a.createElement("tt",null,"Node")," class which allows for relations to be established between other such nodes. The ",l.a.createElement("tt",null,"Node")," class is further extended to define the ",l.a.createElement("tt",null,"Agent")," and ",l.a.createElement("tt",null,"Network")," classes. The ",l.a.createElement("tt",null,"Network")," classes can then be further extended to define specific locations like a ",l.a.createElement("tt",null,"Home")," or a ",l.a.createElement("tt",null,"Workplace")," class. Thus a typical graph might be one that's shown in the figure below: individual agents (extensions of the ",l.a.createElement("tt",null,"Person")," class) are connected to Homes and Workplaces (both extensions of the ",l.a.createElement("tt",null,"Network")," class).",l.a.createElement(b.a,{p:2,m:2,backgroundColor:"white"},l.a.createElement(q.a,null,l.a.createElement(y.a,{width:"70%",ml:"7%",mr:"7%",pt:"4%",pb:"4%",src:t(151)}))),"One could then establish relations between these nodes. For example, every Agent could be a resident of a specific house (specified by a ",l.a.createElement("tt",null,"HouseholdID"),") and be employed by a specific workplace (specified by the ",l.a.createElement("tt",null,"WorkplaceID"),"). The relations are bidirectional, and require one to additionally specify that the home houses -- and the workplace employs -- that particular Agent (specified by the ",l.a.createElement("tt",null,"AgentID"),").",l.a.createElement(b.a,{p:2,m:2,backgroundColor:"white"},l.a.createElement(q.a,null,l.a.createElement(y.a,{width:"70%",ml:"7%",mr:"7%",pt:"4%",pb:"4%",src:t(152)}))))),l.a.createElement(f.a,{p:2,m:2,align:"justify"},"Using an abstraction like a graph makes the framework domain independent and flexible. This graph can be implemented in one of two ways, either by using ",l.a.createElement(N.a,{style:{color:"blue"},variant:"outline",href:"https://neo4j.com/",target:"_blank"},"Neo4j"),", a graph database, or using the Scala programming language's scalable map implementation ",l.a.createElement(N.a,{style:{color:"blue"},target:"_blank",href:"https://www.scala-lang.org/api/2.12.8/scala/collection/concurrent/TrieMap.html"},"TrieMap"),". The modeller can choose either of these implementations. Both these structures were chosen since they optimized data operations, allowing the simulation to scale efficiently to larger populations. The simulation engine framework allows modellers to directly specify their models using its own language. This domain-specific language is itself based on ",l.a.createElement("i",null,"Scala"),", the language that the simulation framework has been written in. This allows modellers to extend their knowledge of ",l.a.createElement("i",null,"Scala")," when creating their models."),l.a.createElement(E.a,{size:"md",m:2,p:2},"The ",l.a.createElement("tt",null,"Agent")," and ",l.a.createElement("tt",null,"StatefulAgent")," classes"),l.a.createElement(f.a,{p:2,m:2,align:"justify"},"The ",l.a.createElement("tt",null,"Agent")," class can be extended to specify a custom agent in a model with specific attributes. These could be general attributes like ",l.a.createElement("tt",null,"householdID")," or a ",l.a.createElement("tt",null,"workplaceID"),", or model-specific attributes like ",l.a.createElement("tt",null,"relativeSusceptibility")," which defines the relative susceptibility the individual has to being infected. A pre-defined extension of the ",l.a.createElement("tt",null,"Agent")," class is the ",l.a.createElement("tt",null,"StatefulAgent")," class, which endows the ",l.a.createElement("tt",null,"Agent")," with a ",l.a.createElement("a",{href:"https://en.wikipedia.org/wiki/Finite-state_machine"},"Finite-State Machine"),", allowing them to be in one -- and only one -- disease state at any given time.",l.a.createElement(b.a,{p:2,m:2,backgroundColor:"white"},l.a.createElement(q.a,null,l.a.createElement(y.a,{width:"60%",ml:"7%",mr:"7%",pt:"5%",pb:"5%",src:t(153)}))),"In addition, certain abstract and highly-used concepts have been highlighted and defined using the framework's language, like schedules that govern the movement of individuals, and behaviours which are actions that are performed by every agent at every time-step."),l.a.createElement(E.a,{size:"sm",m:2,p:2},"Schedules"),l.a.createElement(f.a,{p:2,m:2,align:"justify"},'Every individual agent follows a schedule that is defined by the modeller. Such schedules specify agent locations across time. These schedules can be dynamic, can depend on the current state of the agent, and can be affected by interventions that are imposed. For example, one could define a different schedules for individuals, depending on whether they are above the age of 20 or below it. In the former case, these individuals could be considered as "employees", who go from home to work, while in the latter case, they could be "students" who go from home to school. These conditions can be made as general or specific as necessary: for example, one could define a schedule for all agents who happen to be symptomatic, which involves them spending more time at home rather than at work or school, thereby exploring the effect of "quarantining" symptomatic individuals. Thus, complicated network structures can be modelled by incorporating granularity into the schedules of different individuals. ',l.a.createElement("br",null),l.a.createElement("br",null),l.a.createElement(b.a,{p:2,m:2,backgroundColor:"white"},l.a.createElement(q.a,null,l.a.createElement(y.a,{width:"70%",ml:"7%",mr:"7%",pt:"5%",pb:"5%",src:t(154)})))),l.a.createElement(E.a,{size:"sm",m:2,p:2},"Behaviours"),l.a.createElement(f.a,{p:2,m:2,align:"justify"},"A behaviour is an action that is performed by each agent at every time-step, and can be defined within the user-defined extension of the ",l.a.createElement("tt",null,"Agent")," class using the framework-defined ",l.a.createElement("tt",null,"addBehaviour")," function. These behaviours can be used to model (for example) whether or not an individual will go to a vaccination centre to get vaccinated, or alternatively to count the number of days that an individual has spent in the infected compartment. Such behaviours thus give the modeller the flexibility to perform a repetitive task per agent per time-step."),l.a.createElement(h.a,{p:4,mb:2},l.a.createElement(o.b,{to:"/synthetic_population"},l.a.createElement(g.a,{leftIcon:l.a.createElement(Y.a,null)},"Synthetic Population")),l.a.createElement(J.a,null),l.a.createElement(o.b,{to:"/viz_engine"},l.a.createElement(g.a,{rightIcon:l.a.createElement(Y.b,null)},"Visualization Engine"))))))},$=t(172);var ee=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement(c.a,{theme:u},l.a.createElement(A,{bg:"#392F74"}),l.a.createElement(q.a,null,l.a.createElement(I.a,{maxW:"container.xl",m:3},l.a.createElement(f.a,{m:2,p:2,align:"justify"},l.a.createElement(q.a,null,l.a.createElement(E.a,{size:"lg",p:2},"The Synthetic Population")),l.a.createElement("br",null),"At the core of BharatSim is a simulated synthetic population, generated using multiple data sources. The resulting population of individuals and households with demographic attributes resembles \u201creality\u201d: in that if an identical survey were carried out with the synthetic population, it would bear results that statistically similar to the true population."),l.a.createElement(f.a,{m:2,p:2,align:"justify"},"A synthetic population is a simplified individual-level representation of the actual population. This means that while every person is represented individually in it, not all of their attributes are included (for example, hair colour or shoe-size are deemed to be irrelevant for modelling epidemic spread, and are thus ignored, while the presence of commodities like diabetes would be included). As such, a synthetic population does not aim to be identical to the actual population, but instead attempts to match its various statistical distributions and correlations, thereby being sufficiently close to the true population to be used in modelling.",l.a.createElement("br",null)),l.a.createElement(E.a,{size:"md",m:2,p:2},"An example"),l.a.createElement(f.a,{m:2,p:2,align:"justify"},"In the table below, you can see an example of a section of a synthetic population. Each row represents an individual with a unique ID, as well as certain attributes. These attributes could be related to the individual themselves (like their gender, age, and height and so on), or their network (details pertaining to their homes, workplaces, and possibly schools). Additionally, the population could also contain information regarding the individual\u2019s comorbidities (for example, whether they have diabetes or other preexisting conditions), if this is deemed relevant to the modelling exercise."),l.a.createElement("br",null),l.a.createElement(b.a,{overflowX:"auto",maxWidth:"100%"},l.a.createElement($.a,{size:"sm",maxW:"500px"},l.a.createElement($.e,null,"  ",l.a.createElement($.f,null,l.a.createElement($.d,null,"Agent_ID"),l.a.createElement($.d,null,"SexLabel"),l.a.createElement($.d,null,"Age"),l.a.createElement($.d,null,"Height"),l.a.createElement($.d,null,"Weight"),l.a.createElement($.d,null,"JobLabel"),l.a.createElement($.d,null,"StateLabel"),l.a.createElement($.d,null,"District"),l.a.createElement($.d,null,"AdminUnitName"),l.a.createElement($.d,null,"AdminUnitLatitude"),l.a.createElement($.d,null,"AdminUnitLongitude"),l.a.createElement($.d,null,"HHID"),l.a.createElement($.d,null,"H_Lat"),l.a.createElement($.d,null,"H_Lon"),l.a.createElement($.d,null,"WorkPlaceID"),l.a.createElement($.d,null,"W_Lat"),l.a.createElement($.d,null,"W_Lon"),l.a.createElement($.d,null,"school_id"),l.a.createElement($.d,null,"school_lat"),l.a.createElement($.d,null,"school_long"),l.a.createElement($.d,null,"public_place_id"),l.a.createElement($.d,null,"public_place_lat"),l.a.createElement($.d,null,"public_place_long"),l.a.createElement($.d,null,"essential_worker"),l.a.createElement($.d,null,"Adherence_to_Intervention"),l.a.createElement($.d,null,"M_High_BP"),l.a.createElement($.d,null,"M_Diabetes"))),l.a.createElement($.b,null,l.a.createElement($.f,null,l.a.createElement($.c,null,"99802077568"),l.a.createElement($.c,null,"Female"),l.a.createElement($.c,null,"76"),l.a.createElement($.c,null,"147.37"),l.a.createElement($.c,null,"49.05"),l.a.createElement($.c,null,"Construction"),l.a.createElement($.c,null,"Maharashtra"),l.a.createElement($.c,null,"Pune"),l.a.createElement($.c,null,"Mohammadwadi-Kausar Baug"),l.a.createElement($.c,null,"18.47477"),l.a.createElement($.c,null,"73.89257"),l.a.createElement($.c,null,"99801684702"),l.a.createElement($.c,null,"18.46709"),l.a.createElement($.c,null,"73.90603"),l.a.createElement($.c,null,"2001000003467"),l.a.createElement($.c,null,"18.4679"),l.a.createElement($.c,null,"73.89859"),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null),l.a.createElement($.c,null),l.a.createElement($.c,null,"3001000000062"),l.a.createElement($.c,null,"18.45035"),l.a.createElement($.c,null,"73.87068"),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null,"1"),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null,"0")),l.a.createElement($.f,null,l.a.createElement($.c,null,"99801380107"),l.a.createElement($.c,null,"Male"),l.a.createElement($.c,null,"37"),l.a.createElement($.c,null,"162.03"),l.a.createElement($.c,null,"57.94"),l.a.createElement($.c,null,"Ag labour"),l.a.createElement($.c,null,"Maharashtra"),l.a.createElement($.c,null,"Pune"),l.a.createElement($.c,null,"Nagpur Chawl-Phule Nagar"),l.a.createElement($.c,null,"18.55893"),l.a.createElement($.c,null,"73.87609"),l.a.createElement($.c,null,"99801248473"),l.a.createElement($.c,null,"18.55952"),l.a.createElement($.c,null,"73.87877"),l.a.createElement($.c,null,"2001000006630"),l.a.createElement($.c,null,"18.58283"),l.a.createElement($.c,null,"73.91661"),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null),l.a.createElement($.c,null),l.a.createElement($.c,null,"3001000001044"),l.a.createElement($.c,null,"18.52699"),l.a.createElement($.c,null,"73.83451"),l.a.createElement($.c,null,"1"),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null,"0")),l.a.createElement($.f,null,l.a.createElement($.c,null,"99802408169"),l.a.createElement($.c,null,"Male"),l.a.createElement($.c,null,"6"),l.a.createElement($.c,null,"111.21"),l.a.createElement($.c,null,"23.13"),l.a.createElement($.c,null,"Student"),l.a.createElement($.c,null,"Maharashtra"),l.a.createElement($.c,null,"Pune"),l.a.createElement($.c,null,"Kharadi-Chandan Nagar"),l.a.createElement($.c,null,"18.56355"),l.a.createElement($.c,null,"73.93256"),l.a.createElement($.c,null,"99800525921"),l.a.createElement($.c,null,"18.54846"),l.a.createElement($.c,null,"73.94971"),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null),l.a.createElement($.c,null),l.a.createElement($.c,null,"2001000002070"),l.a.createElement($.c,null,"18.55683"),l.a.createElement($.c,null,"73.94757"),l.a.createElement($.c,null,"3001000000274"),l.a.createElement($.c,null,"18.54904"),l.a.createElement($.c,null,"73.9491"),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null,"1"),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null,"0")),l.a.createElement($.f,null,l.a.createElement($.c,null,"99800402683"),l.a.createElement($.c,null,"Female"),l.a.createElement($.c,null,"37"),l.a.createElement($.c,null,"152.65"),l.a.createElement($.c,null,"52.61"),l.a.createElement($.c,null,"Ag labour"),l.a.createElement($.c,null,"Maharashtra"),l.a.createElement($.c,null,"Pune"),l.a.createElement($.c,null,"Karve Nagar"),l.a.createElement($.c,null,"18.49149"),l.a.createElement($.c,null,"73.82173"),l.a.createElement($.c,null,"99800473441"),l.a.createElement($.c,null,"18.48539"),l.a.createElement($.c,null,"73.82129"),l.a.createElement($.c,null,"2001000006876"),l.a.createElement($.c,null,"18.53875"),l.a.createElement($.c,null,"73.92594"),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null),l.a.createElement($.c,null),l.a.createElement($.c,null,"3001000000650"),l.a.createElement($.c,null,"18.48382"),l.a.createElement($.c,null,"73.79731"),l.a.createElement($.c,null,"1"),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null,"0")),l.a.createElement($.f,null,l.a.createElement($.c,null,"99800824202"),l.a.createElement($.c,null,"Female"),l.a.createElement($.c,null,"35"),l.a.createElement($.c,null,"150.92"),l.a.createElement($.c,null,"52.42"),l.a.createElement($.c,null,"Homebound"),l.a.createElement($.c,null,"Maharashtra"),l.a.createElement($.c,null,"Pune"),l.a.createElement($.c,null,"Deccan Gymkhana-Model Colony"),l.a.createElement($.c,null,"18.51845"),l.a.createElement($.c,null,"73.83391"),l.a.createElement($.c,null,"99800895513"),l.a.createElement($.c,null,"18.52335"),l.a.createElement($.c,null,"73.85339"),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null),l.a.createElement($.c,null),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null),l.a.createElement($.c,null),l.a.createElement($.c,null,"3001000000236"),l.a.createElement($.c,null,"18.54026"),l.a.createElement($.c,null,"73.91186"),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null,"0")),l.a.createElement($.f,null,l.a.createElement($.c,null,"99801178045"),l.a.createElement($.c,null,"Female"),l.a.createElement($.c,null,"50"),l.a.createElement($.c,null,"151.51"),l.a.createElement($.c,null,"50.1"),l.a.createElement($.c,null,"Ag labour"),l.a.createElement($.c,null,"Maharashtra"),l.a.createElement($.c,null,"Pune"),l.a.createElement($.c,null,"Shanivar Peth-Sadashiv Peth"),l.a.createElement($.c,null,"18.51944"),l.a.createElement($.c,null,"73.85194"),l.a.createElement($.c,null,"99801142021"),l.a.createElement($.c,null,"18.51388"),l.a.createElement($.c,null,"73.84935"),l.a.createElement($.c,null,"2001000000636"),l.a.createElement($.c,null,"18.50785"),l.a.createElement($.c,null,"73.84921"),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null),l.a.createElement($.c,null),l.a.createElement($.c,null,"3001000001403"),l.a.createElement($.c,null,"18.51024"),l.a.createElement($.c,null,"73.84731"),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null,"0.9"),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null,"0")),l.a.createElement($.f,null,l.a.createElement($.c,null,"99802883562"),l.a.createElement($.c,null,"Female"),l.a.createElement($.c,null,"14"),l.a.createElement($.c,null,"139.25"),l.a.createElement($.c,null,"37.81"),l.a.createElement($.c,null,"Student"),l.a.createElement($.c,null,"Maharashtra"),l.a.createElement($.c,null,"Pune"),l.a.createElement($.c,null,"Viman Nagar-Somnath Nagar"),l.a.createElement($.c,null,"18.55818"),l.a.createElement($.c,null,"73.92165"),l.a.createElement($.c,null,"99801268501"),l.a.createElement($.c,null,"18.57398"),l.a.createElement($.c,null,"73.9285"),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null),l.a.createElement($.c,null),l.a.createElement($.c,null,"2001000000159"),l.a.createElement($.c,null,"18.52152"),l.a.createElement($.c,null,"73.92834"),l.a.createElement($.c,null,"3001000000633"),l.a.createElement($.c,null,"18.56121"),l.a.createElement($.c,null,"73.93799"),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null,"0.8"),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null,"0")),l.a.createElement($.f,null,l.a.createElement($.c,null,"99800390824"),l.a.createElement($.c,null,"Male"),l.a.createElement($.c,null,"19"),l.a.createElement($.c,null,"157.71"),l.a.createElement($.c,null,"50.84"),l.a.createElement($.c,null,"Plantation lab"),l.a.createElement($.c,null,"Maharashtra"),l.a.createElement($.c,null,"Pune"),l.a.createElement($.c,null,"Salisbury Park-Maharshi Nagar"),l.a.createElement($.c,null,"18.49162"),l.a.createElement($.c,null,"73.8661"),l.a.createElement($.c,null,"99800461238"),l.a.createElement($.c,null,"18.49814"),l.a.createElement($.c,null,"73.87331"),l.a.createElement($.c,null,"2001000011846"),l.a.createElement($.c,null,"18.49934"),l.a.createElement($.c,null,"73.8511"),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null),l.a.createElement($.c,null),l.a.createElement($.c,null,"3001000000528"),l.a.createElement($.c,null,"18.46247"),l.a.createElement($.c,null,"73.85122"),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null,"0.4"),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null,"0")),l.a.createElement($.f,null,l.a.createElement($.c,null,"99800144374"),l.a.createElement($.c,null,"Female"),l.a.createElement($.c,null,"50"),l.a.createElement($.c,null,"152.6"),l.a.createElement($.c,null,"50.58"),l.a.createElement($.c,null,"Homebound"),l.a.createElement($.c,null,"Maharashtra"),l.a.createElement($.c,null,"Pune"),l.a.createElement($.c,null,"Dhanakvadi-Ambegaon Pathar"),l.a.createElement($.c,null,"18.45878"),l.a.createElement($.c,null,"73.84264"),l.a.createElement($.c,null,"99800193269"),l.a.createElement($.c,null,"18.46661"),l.a.createElement($.c,null,"73.8561"),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null),l.a.createElement($.c,null),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null),l.a.createElement($.c,null),l.a.createElement($.c,null,"3001000001414"),l.a.createElement($.c,null,"18.46532"),l.a.createElement($.c,null,"73.89147"),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null,"0.9"),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null,"0")),l.a.createElement($.f,null,l.a.createElement($.c,null,"99800944765"),l.a.createElement($.c,null,"Female"),l.a.createElement($.c,null,"45"),l.a.createElement($.c,null,"151.99"),l.a.createElement($.c,null,"50.99"),l.a.createElement($.c,null,"Homebound"),l.a.createElement($.c,null,"Maharashtra"),l.a.createElement($.c,null,"Pune"),l.a.createElement($.c,null,"Kharadi-Chandan Nagar"),l.a.createElement($.c,null,"18.56355"),l.a.createElement($.c,null,"73.93256"),l.a.createElement($.c,null,"99800978186"),l.a.createElement($.c,null,"18.54808"),l.a.createElement($.c,null,"73.94093"),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null),l.a.createElement($.c,null),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null),l.a.createElement($.c,null),l.a.createElement($.c,null,"3001000001402"),l.a.createElement($.c,null,"18.5684"),l.a.createElement($.c,null,"73.82062"),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null,"0.9"),l.a.createElement($.c,null,"0"),l.a.createElement($.c,null,"0"))))),l.a.createElement("br",null),l.a.createElement(f.a,{m:2,p:2,align:"justify"},"All of these attributes are strongly correlated with each other and a good synthetic population will ideally be able reproduce the correlations that occur in the real world. However, this is a monumental task; real world data is complex, and often contains many artifacts that need to be addressed."),l.a.createElement(E.a,{size:"md",m:2,p:2},"Generating the population"),l.a.createElement(f.a,{m:2,p:2,align:"justify"},"We use a variety of data sources to generate a population of individuals and households with demographic attributes that are statistically identical to real data. This population is generated using statistical methods and machine learning algorithms that are flexible enough to generate data at various administrative levels, ranging from small communities to states. The primary sources of data for these algorithms include the Census of India, the India Human Development Survey (IHDS), the National Sample Survey (NSS), the National Family Health Welfare Survey (NFHS), and the Gridded Population of the World (GPW). While the synthetic population should faithfully reproduce demographic statistics, it must also incorporate other realistic network structures, such as those appropriate to households and workplaces. (Otherwise, we could end up, for example, with ``families'' composed entirely of toddlers, or workplaces with strange mixes of professions.) Because different kinds of data respond well to different techniques, a hybrid process is used to scale up these datasets. First, the data is cleaned to remove obvious inconsistencies. Next, a customized hybrid of Iterative Proportional Fitting (IPF), Iterative Proportional Updating (IPU), and a specialized variant of a neural network, called Conditional-Tabular Generative Adversarial Network (CTGAN), is used to generate new data. Briefly, ",l.a.createElement(N.a,{style:{color:"blue"},variant:"outline",href:"https://en.wikipedia.org/wiki/Iterative_proportional_fitting",target:"_blank"},"Iterative Proportional Fitting")," finds a joint distribution that matches the marginals, while trying to stay as close to the sample distribution as possible. ",l.a.createElement(N.a,{style:{color:"blue"},variant:"outline",href:"",target:"_blank"},"Iterative Proportional Updating")," is a heuristic iterative approach which can simultaneously match or fit to multiple distributions (constraints). Finally, ",l.a.createElement(N.a,{style:{color:"blue"},variant:"outline",href:"https://arxiv.org/abs/1907.00503",target:"_blank"},"Conditional-Tabular Generative Adversarial Networks")," is a method to model the tabular data distribution and sample rows from the distribution. A ",l.a.createElement(N.a,{style:{color:"blue"},variant:"outline",href:"https://en.wikipedia.org/wiki/Generative_adversarial_network",target:"_blank"},"Generative Adversarial Network")," (GAN) uses two ``competing'' neural networks, the generator and the discriminator. The generator creates realistic samples with the goal that the discriminator should be unable to differentiate between a real sample and a generated sample. In this zero-sum game, capabilities of both the networks are enhanced iteratively. Critically, our techniques are designed to work seamlessly across data-scarce and data-rich areas; even if a particular area has error-prone or missing data, a synthetic population can still be generated, albeit of a lower quality. The synthetic population is generated using statistical methods and machine learning algorithms which are flexible enough to generate data at various administrative levels, i.e., at the level of cities, districts, states, or even the entire country, depending on the level of granularity required by the modeller. The primary sources of data for the generation of such a population are datasets from the Census of India, the India Human Development Survey (IHDS), the National Sample Survey (NSS), the National Family Health Welfare Survey (NFHS), and the Gridded Population of the World (GPW). A number of other sources are also used to fine-tune and validate the above datasets."),l.a.createElement(E.a,{size:"sm",m:2,p:2},"The population generation process"),l.a.createElement(f.a,{m:2,p:2,align:"justify"},"We use IPF to generate a base population, using census data for the demographics and the IHDS survey dataset for personal and household attributes. The base population  thus consists of individual data and household data. We assign each household to an administrative unit within a district. We also experimented with CTGAN to generate a base population. The major advantage of IPU over CTGAN is that IPU is capable of matching individual level and household level characteristics of an individual while making sure that members of the household have a realistic age and gender joint distribution. To assign job labels to individuals, the relevant data from the IHDS dataset is used. For the time-being, we classify individuals below the age of 18 as students, but could easily relax this assumption. A subset of the population is also assumed be home-bound. This subset consists of unemployed individuals, homemakers, infants and children under the age 3 and elderly people over the retirement age. We use data from the NSS survey to determine the percentage of adult males and females in a city who are home-bound. A random independent sample is drawn from a Bernoulli distribution with this gender-based marginal value as a parameter in order to decide if an individual will be home-bound or not. Each student in the population is assigned a school. Similarly, each working individual is assigned a workplace based upon their job label. We generate a synthetic latitude and longitude pair for each home, school and workplace in our dataset using ",l.a.createElement(N.a,{style:{color:"blue"},variant:"outline",href:"https://gadm.org/",target:"_blank"},"GADM")," grid population density data. We select a subset of grid points that lie within a given geographical boundary and sample grid-points with replacement grid points from the subset, weighing each point by the population density in the associated grid. We add independent random noise drawn from a uniform distribution to the latitudes and longitudes, rejecting those samples which fall outside the given geographical boundary. We follow this process to generate synthetic geolocation data for households, schools and workplaces. To assign an individual a school, we sample from the list of schools within that geographical boundary, weighing each school by the inverse of the euclidean distance between it and the individual's home. This weighting factor increases the probability of assigning an individual a school that is closer to their home. We follow a similar method to assign workplaces to adults. Additionally, based on every individual's job label, a workplace is assigned at random from a suitable subset of allowed workplaces. A number of additional attributes are included in our synthetic population, including whether an individual uses public transport or whether an individual is an essential worker. These values are assigned using the individual's job label."),l.a.createElement(E.a,{size:"sm",m:2,p:2},"Verifying the generated population"),l.a.createElement(f.a,{m:2,p:2,align:"justify"},"To compare and verify the generated synthetic population with the real data, multiple metrics such as Statistical (CS-test, KS-test, Bhattacharya distance), Likelihood, and Machine Learning Efficacy Regression are used. For example, the Bhattacharya distance -- a distance measure to measure the statistical similarity between two samples in the same space -- is used to compare the various versions of synthetic population. The greater the overlap between two samples, the lower the Bhattacharya distance. As such, this metric can be used to measure similarity for the age-height and age-weight joint distributions. Critically, our techniques are designed to work seamlessly across data-scarce and data-rich areas; even if a particular area has error-prone or missing data, we can still generate a synthetic population, albeit of slightly poorer quality, but without affecting anything else."),l.a.createElement(h.a,{p:4,mb:2},l.a.createElement(o.b,{to:"/viz_engine"},l.a.createElement(g.a,{leftIcon:l.a.createElement(Y.a,null)},"Visualization Engine")),l.a.createElement(J.a,null),l.a.createElement(o.b,{to:"/simulation_engine"},l.a.createElement(g.a,{rightIcon:l.a.createElement(Y.b,null)},"Simulation Engine")))))))};var ae=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement(c.a,{theme:u},l.a.createElement(A,{bg:"#392F74"})),l.a.createElement(q.a,null,l.a.createElement(I.a,{maxW:"container.xl"},l.a.createElement(q.a,null,l.a.createElement(E.a,{size:"lg",m:2,p:2},"The Visualization Engine")),l.a.createElement(f.a,{m:2,p:2,align:"justify"},"Using the simulation engine, the modeller may define an output file containing, for example, the number of individuals in different disease states for every time step. The visualization engine can then read this output and create multiple dashboards with different types of graphs that can help in analyzing the results and in visualizing them.",l.a.createElement("br",null),l.a.createElement("br",null),"The visualisation engine is self-contained, and can accept and visualize any CSV data file. Each dashboard can possess a combination of different graphs and charts, from line-graphs, histograms, and pie-charts. Additionally, the visualization engine can also represent GIS data in the geoJSON format to plot heat maps and choropleths, which can either be static, or which can change with time based on the data provided in the input CSV file.",l.a.createElement("br",null),l.a.createElement("br",null),"The visualisation engine is self-contained, and can accept and visualize any CSV data file. Each dashboard can possess a combination of different graphs and charts, from line-graphs, histograms, and pie-charts. Additionally, the visualization engine can also represent GIS data in the geoJSON format to plot heat maps and choropleths, which can either be static, or which can change with time based on the data provided in the input CSV file, shown below.",l.a.createElement(b.a,{p:2,m:2,backgroundColor:"white"},l.a.createElement(q.a,null,l.a.createElement(y.a,{width:"30%",ml:"7%",mr:"7%",pt:"5%",pb:"5%",src:t(155)})))),l.a.createElement(E.a,{size:"md",m:2,p:2},"Features of the Visualization Engine"),l.a.createElement(f.a,{m:2,p:2,align:"justify"},"The visualization engine provides a variety of different features:",l.a.createElement("br",null),l.a.createElement("br",null),l.a.createElement(E.a,{size:"s"},"Data Import: ")," The visualization engine can import data in ZIP, CSV, and GeoJSON formats. The user can add, delete, and link files from different dashboards and can also add columns with custom formulae.",l.a.createElement("br",null),l.a.createElement("br",null),l.a.createElement(E.a,{size:"s"}," Charts: "),"The user can represent time-series data as a line-graph. Additionally, bar charts, histograms, and pie charts can be used to study aggregated data. Geographical information and data can also be visualized. Spatial variations in data can be visualized using either heatmaps or choropleths. Heatmaps visualize data in the form of ``hot'' or ``cold'' spots, with a warm-to-cool color scheme. Choropleth maps can also be used to visualize how quantities vary across a fixed geographic area like a district or state, while simultaneously showing the extent of variation within a region.",l.a.createElement("br",null),l.a.createElement("br",null),l.a.createElement(E.a,{size:"s"}," Project & Dashboard management: ")," Users can create a Project which can have multiple individual dashboards for better analysis.",l.a.createElement("br",null),l.a.createElement("br",null),"Users can add, edit, and delete projects and dashboards for better management. Dashboards are auto-saved to avoid data loss. Users can easily add, edit, duplicate, and delete widgets and charts in each dashboard. Dashboards can be duplicated to allow users to duplicate certain design choices and widget configurations. Each widget also allows the users to export the output either as raster or vector data using the PNG and SVG file formats respectively."),l.a.createElement(h.a,{p:4,mb:2},l.a.createElement(o.b,{to:"/simulation_engine"},l.a.createElement(g.a,{leftIcon:l.a.createElement(Y.a,null)},"Simulation Engine")),l.a.createElement(J.a,null),l.a.createElement(o.b,{to:"/synthetic_population"},l.a.createElement(g.a,{rightIcon:l.a.createElement(Y.b,null)},"Synthetic Population"))))))};function te(){return l.a.createElement(o.a,null,l.a.createElement(s.a,{path:"/people"},l.a.createElement(c.a,{theme:u},l.a.createElement(W,null,"  ",l.a.createElement(K,null)),l.a.createElement(G,null))),l.a.createElement(s.a,{path:"/components"},l.a.createElement(c.a,{theme:u},l.a.createElement(W,null," ",l.a.createElement(X,null)," "),l.a.createElement(G,null))),l.a.createElement(s.a,{path:"/faq"},l.a.createElement(V,null)),l.a.createElement(s.a,{path:"/media"},l.a.createElement(c.a,{theme:u},l.a.createElement(W,null,"Work in Progress..."))),l.a.createElement(s.a,{path:"/collaborations"},l.a.createElement(c.a,{theme:u},l.a.createElement(A,{bg:"#392F74"}),l.a.createElement("div",{style:{margin:"auto",width:"50%",paddingLeft:"23vw"}},"Work in Progress.."))),l.a.createElement(s.a,{path:"/simulation_engine"},l.a.createElement(Q,null),l.a.createElement(G,null)),l.a.createElement(s.a,{path:"/synthetic_population"},l.a.createElement(ee,null),l.a.createElement(G,null)),l.a.createElement(s.a,{path:"/viz_engine"},l.a.createElement(ae,null),l.a.createElement(G,null)),l.a.createElement(s.a,{path:"/publications"},l.a.createElement(c.a,{theme:u},l.a.createElement(A,{bg:"#392F74"}),l.a.createElement("div",{style:{margin:"auto",width:"50%",paddingLeft:"23vw"}},"To be updated"))),l.a.createElement(s.a,{exact:!0,path:"/"},l.a.createElement(V,null)))}var ne=Object(m.a)({colors:{primary:{100:"#E5FCF1",200:"#27EF96",300:"#10DE82",400:"#0EBE6F",500:"#0CA25F",600:"#0A864F",700:"#086F42",800:"#075C37",900:"#064C2E"}}}),le=document.getElementById("root");i.a.render(l.a.createElement(l.a.StrictMode,null,l.a.createElement(c.a,{theme:ne},l.a.createElement(te,null))),le)},57:function(e,a,t){e.exports=t.p+"static/media/Logo_color_bg.65e8f3fb.png"},61:function(e,a,t){e.exports=t.p+"static/media/Logo_BW_on_dark.a9735e5d.svg"}},[[126,1,2]]]);
//# sourceMappingURL=main.0ebc4c02.chunk.js.map