{"version":3,"sources":["assets/people/DebG.jpeg","assets/people/Bhavesh_Neekhra_AU.jpeg","assets/people/Philip_Profile.jpg","assets/people/jayanta1.jpg","assets/people/praveen.jpg","assets/people/harshal.png","assets/people/chhaya.jpeg","assets/graph.png","assets/nodes.png","assets/relations.png","assets/person.png","assets/schedules.png","assets/mumbai.gif","theme.js","components/ui/ButtonDoc.js","components/sections/Header.js","components/layouts/LandingLayout.js","pages/LandingHero.js","components/sections/Footerv2.js","pages/Landing.js","pages/Publications.js","pages/People.js","pages/Projects.js","pages/SimulationEngine.js","pages/SyntheticPopulation.js","pages/VizEngine.js","App.js","utils/theme.js","index.js","assets/Logo_color_bg.png","assets/Logo_BW_on_dark.svg"],"names":["module","exports","__webpack_require__","p","theme","extendTheme","config","initialColorMode","useSystemColorMode","space","ButtonDoc","MenuItem","_ref","children","isLast","flag","_ref$to","to","rest","Object","objectWithoutProperties","Header_excluded","react_default","a","createElement","Fragment","esm_text","assign","mb","base","sm","mr","display","borderBottom","borderBottomColor","react_router_dom","MenuItemUrl","_ref2","_ref2$to","_excluded2","href","isExternal","CloseIcon","width","viewBox","xmlns","fill","d","MenuIcon","Header","props","_React$useState","React","useState","_React$useState2","slicedToArray","show","setShow","_React$useState3","useHistory","_React$useState4","location","useLocation","flex","as","align","justify","wrap","w","bg","color","m","box","size","esm_image","src","BharatSimLogo","md","onClick","Header_CloseIcon","Header_MenuIcon","flexBasis","direction","pt","pathname","toString","Header_MenuItem","Header_MenuItemUrl","target","esm_button","rounded","_hover","window","open","LandingLayout","minH","sections_Header","CallToActionWithAnnotation","container","maxW","stack","Box","textAlign","spacing","py","heading","fontWeight","fontSize","lineHeight","fontFamily","id","style","alignSelf","position","colorScheme","px","createIcon","displayName","path","fillRule","clipRule","ListHeader","Footerv2","useColorModeValue","Stack","simple_grid","templateColumns","LogoBW","Footerv2_ListHeader","esm_link","mt","index_esm","Landing","chakra_provider","ProfileCard","name","title","email","img_url","alignItems","justifyContent","h","mx","shadow","overflow","boxSize","objectFit","objectPosition","alt","icon","MdEmail","People","className","center","require","Ma","pb","imageUrl","spacer","body","external_link","Projects","SimulationEngine","flexDirection","ml","backgroundColor","variant","leftIcon","ai_index_esm","rightIcon","SyntheticPopulation","overflowX","maxWidth","table","VizEngine","App","react_router","src_pages_People","pages_Projects","margin","paddingLeft","pages_SimulationEngine","pages_SyntheticPopulation","pages_VizEngine","customTheme","colors","primary","100","200","300","400","500","600","700","800","900","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.52486b9a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/DebG.39c419be.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Bhavesh_Neekhra_AU.ed05fd71.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Philip_Profile.539ed4cf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jayanta1.053e2243.jpg\";","module.exports = __webpack_public_path__ + \"static/media/praveen.1ad1deb8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/harshal.5b638db1.png\";","module.exports = __webpack_public_path__ + \"static/media/chhaya.43116916.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/graph.1ce67d8c.png\";","module.exports = __webpack_public_path__ + \"static/media/nodes.dcd06fe8.png\";","module.exports = __webpack_public_path__ + \"static/media/relations.6ffcf323.png\";","module.exports = __webpack_public_path__ + \"static/media/person.3091001f.png\";","module.exports = __webpack_public_path__ + \"static/media/schedules.93c1f6cb.png\";","module.exports = __webpack_public_path__ + \"static/media/mumbai.dd34b16b.gif\";","import { extendTheme } from '@chakra-ui/react'\n\n// 2. Add your color mode config\nconst config = {\n  initialColorMode: 'light',\n  useSystemColorMode: false,\n  space: [0, 4, 8, 16, 32, 64, 128, 256, 512],\n\n}\n\n// 3. extend the theme\nconst theme = extendTheme({ config })\n\nexport default theme\n","\n\nimport React from \"react\";\nimport {\n  Button,\n  Stack,\n  useColorModeValue,\n} from '@chakra-ui/react';\n\n\nfunction ButtonDoc() {\n    const scheme = \"brand\";\n    const step1 = useColorModeValue(\"600\", \"300\");\n    const step2 = useColorModeValue(\"500\", \"400\");\n    const step3 = useColorModeValue(\"300\", \"500\");\n  \n    const sizes = [\"lg\", \"md\", \"sm\", \"xs\"];\n    return (\n\n\n          <Button\n            bgColor={`${scheme}.${step1}`}\n            color=\"white\"\n            fontWeight=\"medium\"\n            rounded=\"md\"\n            shadow=\"base\"\n            size=\"sm\"\n            _focus={{\n              outline: \"none\",\n            }}\n            transition=\"background 0.8s\"\n            backgroundPosition=\"center\"\n            _hover={{\n              bgColor: `${scheme}.${step2}`,\n              bgGradient: `radial(circle, transparent 1%, ${scheme}.${step2} 1%)`,\n              bgPos: \"center\",\n              backgroundSize: \"15000%\",\n            }}\n            _active={{\n              bgColor: `${scheme}.${step3}`,\n              backgroundSize: \"100%\",\n        transition: \"background 0s\",\n            }}\n          >\n            Click Me\n          </Button>\n\n \n    );\n  }\n  \n  export default ButtonDoc;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Box, Flex, Text, Button,Icon,Image, useFocusEffect} from \"@chakra-ui/react\";\nimport Logo from \"../ui/Logo\";\nimport ButtonDoc from \"../ui/ButtonDoc\";\nimport { useHistory,useLocation } from \"react-router-dom\";\nimport BharatSimLogo from '../../assets/Logo_color_bg.png';\n\nconst MenuItem = ({ children, isLast, flag,to = \"/\", ...rest }) => {\n\n  // let location = useLocation();\n  // let path = location.pathname.toString().slice(1);\n  // console.log('path:   ' ,path);\n  // console.log( 'path:' ,path.pathname.toString().slice(1),children.toString().toLowerCase() );\n  return (\n    <>\n    { flag=='current_tab'? \n    <Text\n      mb={{ base: isLast ? 0 : 8, sm: 0 }}\n      mr={{ base: 0, sm: isLast ? 0 : 8 }}\n      display=\"block\"\n      {...rest}\n      borderBottom={\"2px\"}\n      borderBottomColor={'white'}  \n    >\n  \n      <Link to={to}>{children}</Link> </Text>\n\n      : \n      <Text\n      mb={{ base: isLast ? 0 : 8, sm: 0 }}\n      mr={{ base: 0, sm: isLast ? 0 : 8 }}\n      display=\"block\"\n      {...rest}\n    >\n  \n      <Link to={to}>{children}</Link>\n      </Text>\n     }\n\n\n     </>\n      \n   \n  );\n};\n\nconst MenuItemUrl = ({ children, isLast, to = \"/\", ...rest }) => {\n  return (\n    <Text\n      mb={{ base: isLast ? 0 : 8, sm: 0 }}\n      mr={{ base: 0, sm: isLast ? 0 : 8 }}\n      display=\"block\"\n      {...rest}\n    >\n      <Link href={to} isExternal>{children}</Link>\n\n    </Text>\n  );\n};\n\n\n\nconst CloseIcon = () => (\n  <svg width=\"24\" viewBox=\"0 0 18 18\" xmlns=\"http://www.w3.org/2000/svg\">\n    <title>Close</title>\n    <path\n      fill=\"white\"\n      d=\"M9.00023 7.58599L13.9502 2.63599L15.3642 4.04999L10.4142 8.99999L15.3642 13.95L13.9502 15.364L9.00023 10.414L4.05023 15.364L2.63623 13.95L7.58623 8.99999L2.63623 4.04999L4.05023 2.63599L9.00023 7.58599Z\"\n    />\n  </svg>\n);\n\nconst MenuIcon = () => (\n  <svg\n    width=\"24px\"\n    viewBox=\"0 0 20 20\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"white\"\n  >\n    <title>Menu</title>\n    <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" />\n  </svg>\n);\n\nconst Header = (props) => {\n  const [show, setShow] = React.useState(false);\n  const toggleMenu = () => setShow(!show);\n\n  const history = useHistory();\n  const handleRoute = () =>{\n    history.push(\"/about\");\n  }\n\n  const [loc,updateLoc] = React.useState('');\n  let location = useLocation();\n  //write a useffect\n\n \n  // let path = location.pathname.toString().slice(1);\n  //   return () => {\n  //     console.log('useEffect return');\n  //   }\n  // }\n  // ,[])\n  // let location = useLocation();\n  // let path = location.pathname.toString().slice(1);\n\n  return (\n    <>\n    {location &&\n    <Flex\n      as=\"nav\"\n      align=\"center\"\n      justify=\"space-between\"\n      wrap=\"wrap\"\n      w=\"100%\"\n      mb={8}\n      p={2}\n      bg={[\"primary.500\", \"primary.500\", \"transparent\", \"transparent\"]}\n      color={[\"white\", \"white\", \"primary.700\", \"primary.700\"]}\n      {...props}\n    >\n      <Flex align=\"start\">\n        {/* <Logo\n          w=\"100px\"\n          color={[\"white\", \"white\", \"primary.500\", \"primary.500\"]}\n        />\n     */}\n         <Link  m={-3}\n                p={3}to=\"/\">\n                  <Box size='sm'>\n                    <Image width='250px' src={BharatSimLogo}></Image>\n                  </Box>\n                </Link>\n      </Flex>\n\n      <Box display={{ base: \"block\", md: \"none\" }} onClick={toggleMenu}>\n        {show ? <CloseIcon /> : <MenuIcon />}\n      </Box>\n\n      <Box\n        display={{ base: show ? \"block\" : \"none\", md: \"block\" }}\n        flexBasis={{ base: \"100%\", md: \"auto\" }}\n      >\n        <Flex\n          align=\"center\"\n          justify={[\"center\", \"space-between\", \"flex-end\", \"flex-end\"]}\n          direction={[\"column\", \"row\", \"row\", \"row\"]}\n          pt={[4, 4, 0, 0]}\n        >\n\n          { location.pathname.toString()==='/' ?\n          <MenuItem to=\"/\" flag={'current_tab'}> Home</MenuItem> \n          : <><MenuItem to=\"/\" flag={''}>  Home</MenuItem></> \n        }\n          {/* <MenuItem to=\"/about\">About </MenuItem> */}\n\n          { (location.pathname.toString()==='/components' || location.pathname.toString()==='/simulation_engine' || location.pathname.toString()==='/viz_engine' || location.pathname.toString()==='/synthetic_population') ?\n          <MenuItem to=\"/components\" flag={'current_tab'}> Components </MenuItem> :\n          <><MenuItem to=\"/components\" flag={''}> Components </MenuItem></>\n          }\n\n          {/* <MenuItem to=\"/collaborations\"> Collaborations </MenuItem>\n          <MenuItem to=\"/publications\"> Publications </MenuItem> */}\n\n          { location.pathname.toString()==='/people' ?\n          <MenuItem to=\"/people\" flag={'current_tab'}> People </MenuItem>\n           : <MenuItem to=\"/people\" flag={''}> People </MenuItem>\n        } \n\n          {/* <MenuItem to=\"/media\"> Media </MenuItem> */}\n          {/* <MenuItem to=\"/\"> FAQ </MenuItem> */}\n          <MenuItemUrl to=\"https://documentation.com\" isLast>\n          {/* <ButtonDoc></ButtonDoc> */}\n          {/* 363c46 alt button color */}\n          <a href='https://bharatsim.readthedocs.io' target=\"_blank\">\n            <Button\n              size=\"md\"\n              rounded=\"md\"\n              color={[\"primary.500\", \"primary.500\", \"white\", \"white\"]}\n              bg={[\"#2D3748\", \"#2D3748\", \"primary.500\", \"primary.500\"]}\n              _hover={{\n                bg: [\"primary.600\", \"primary.100\", \"primary.600\", \"primary.600\"]\n              }}\n              onClick={()=> window.open(\"https://bharatsim.readthedocs.io\", \"_blank\")}\n            >\n                    Documentation\n            </Button></a>\n\n          </MenuItemUrl>\n        </Flex>\n      </Box>\n    </Flex>\n  }\n  </>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Flex } from \"@chakra-ui/react\";\nimport Header from \"../sections/Header\";\nimport Footer from \"../sections/Footer\";\nexport default function LandingLayout(props) {\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"center\"\n      m=\"0 auto\"\n      {...props}\n      // bg=\"#392F74\"\n      minH=\"98vh\"\n    >\n      <Header bg=\"#392F74\" />\n      {props.children}\n\n    </Flex>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// import Head from 'next/head';\nimport {\n  Box,\n  Heading,\n  Container,\n  Text,\n  Button,\n  Stack,\n  Icon,\n  useColorModeValue,\n  createIcon,\n} from '@chakra-ui/react';\n\nimport \"./LandingHero.css\";\n\nexport default function CallToActionWithAnnotation() {\n  return (\n    <>\n      {/* <Head>\n        <link\n          href=\"https://fonts.googleapis.com/css2?family=Caveat:wght@700&display=swap\"\n          rel=\"stylesheet\"\n        />\n      </Head> */}\n\n      <Container maxW='3xl'>\n        <Stack\n          as={Box}\n          textAlign={'center'}\n          spacing={{ base: 8, md: 5 }}\n          py={{ base: 5, md: 30 }}>\n            <Heading\n              fontWeight={600}\n              fontSize={{ base: 'xl', sm: '3xl', md: '4xl' }}\n              lineHeight={'110%'}\n              fontFamily=\"Lato\"\n              id=\"LandingTitle\">\n              <Text as={'span'} color={'#2D3748'}>\n                BharatSim\n              </Text>\n            </Heading>\n\n          <Text color={'white.500'} p={1} fontWeight={300} fontSize='xl' fontFamily=\"Inter\" textAlign='justify'>\n           {/* <span style={{color:\"#9CAAC5\",fontWeight:\"600\"}}>*/}  <span style={{color:\"#2D3748\",fontWeight:\"600\"}}> BharatSim</span>  is a open-source collaborative project between <span style={{color:\"#2D3748\",fontWeight:\"600\"}}> Ashoka University </span> and <span style={{color:\"#2D3748\",fontWeight:\"600\"}}> Thoughtworks</span>, funded by the <span style={{color:\"#2D3748\",fontWeight:\"600\"}}>Bill & Melinda Gates Foundation</span> and <span style={{color:\"#2D3748\",fontWeight:\"600\"}}>Mphasis</span>.<br/><br/>\n\n           BharatSim provides a distributed, multi-scale, simulation framework for agent-based models. It was originally designed to model the epidemiological dynamics of the COVID-19 pandemic in India, including the social determinants of disease.   BharatSim is easily extended to describe other communicable as well as non-communicable diseases.<br/><br/>\n\n           BharatSim is versatile. In addition to disease modelling, it may be used to study a wide range of social phenomena.<br/><br/>\n\n          </Text>\n          <Stack\n            direction={'row'}\n            spacing={3}\n            align={'center'}\n            alignSelf={'center'}\n            position={'relative'}>\n            <Button\n              colorScheme={'blue'}\n              bg={'#2D3748'}\n              rounded={'full'}\n              px={6}\n              _hover={{\n                bg: 'primary',\n              }}>\n             <Link to=\"/components\"> Get Started </Link>\n            </Button>\n            <Button\n              colorScheme={'blue'}\n              bg={'#00c0b5ff'}\n              rounded={'full'}\n              px={6}\n              _hover={{\n                bg: 'primary',\n              }}\n              onClick={()=> window.open(\"https://github.com/debayanLab/BharatSim\", \"_blank\")}>\n              GitHub\n            </Button>\n\n            {/* <Button variant={'link'} colorScheme={'purple'} size={'sm'}>\n            <span style={{color:\"#9CAAC5\"}}>Learn more</span>\n            </Button> */}\n          </Stack>\n        </Stack>\n      </Container>\n    </>\n  );\n}\n\nconst Arrow = createIcon({\n  displayName: 'Arrow',\n  viewBox: '0 0 72 24',\n  path: (\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M0.600904 7.08166C0.764293 6.8879 1.01492 6.79004 1.26654 6.82177C2.83216 7.01918 5.20326 7.24581 7.54543 7.23964C9.92491 7.23338 12.1351 6.98464 13.4704 6.32142C13.84 6.13785 14.2885 6.28805 14.4722 6.65692C14.6559 7.02578 14.5052 7.47362 14.1356 7.6572C12.4625 8.48822 9.94063 8.72541 7.54852 8.7317C5.67514 8.73663 3.79547 8.5985 2.29921 8.44247C2.80955 9.59638 3.50943 10.6396 4.24665 11.7384C4.39435 11.9585 4.54354 12.1809 4.69301 12.4068C5.79543 14.0733 6.88128 15.8995 7.1179 18.2636C7.15893 18.6735 6.85928 19.0393 6.4486 19.0805C6.03792 19.1217 5.67174 18.8227 5.6307 18.4128C5.43271 16.4346 4.52957 14.868 3.4457 13.2296C3.3058 13.0181 3.16221 12.8046 3.01684 12.5885C2.05899 11.1646 1.02372 9.62564 0.457909 7.78069C0.383671 7.53862 0.437515 7.27541 0.600904 7.08166ZM5.52039 10.2248C5.77662 9.90161 6.24663 9.84687 6.57018 10.1025C16.4834 17.9344 29.9158 22.4064 42.0781 21.4773C54.1988 20.5514 65.0339 14.2748 69.9746 0.584299C70.1145 0.196597 70.5427 -0.0046455 70.931 0.134813C71.3193 0.274276 71.5206 0.70162 71.3807 1.08932C66.2105 15.4159 54.8056 22.0014 42.1913 22.965C29.6185 23.9254 15.8207 19.3142 5.64226 11.2727C5.31871 11.0171 5.26415 10.5479 5.52039 10.2248Z\"\n      fill=\"currentColor\"\n    />\n  ),\n});\n","import React from \"react\";\nimport {\n  Box,\n  chakra,\n  Container,\n  Link,\n  SimpleGrid,\n  Stack,\n  Text,\n  VisuallyHidden,\n  Input,\n  IconButton,\n  useColorModeValue,\n  Image\n} from '@chakra-ui/react';\nimport { ReactNode } from 'react';\nimport { FaInstagram,FaFacebook,FaGithub,FaLinkedin, FaTwitter, FaYoutube } from 'react-icons/fa';\nimport { BiMailSend } from 'react-icons/bi';\nimport BharatSimLogo from '../../assets/Logo_color_bg.png';\nimport LogoBW from '../../assets/Logo_BW_on_dark.svg';\nconst Logo = (props) => {\n  {/*<svg\n  height={32}\n  viewBox=\"0 0 120 28\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  {...props}>\n  <path\n    d=\"M34.87 8.07H37.87V20.2H34.87V8.07ZM39.06 15.62C39.06 12.62 40.9 10.83 43.74 10.83C46.58 10.83 48.42 12.62 48.42 15.62C48.42 18.62 46.62 20.42 43.74 20.42C40.86 20.42 39.06 18.67 39.06 15.62ZM45.41 15.62C45.41 13.97 44.76 13 43.74 13C42.72 13 42.08 14 42.08 15.62C42.08 17.24 42.71 18.22 43.74 18.22C44.77 18.22 45.41 17.3 45.41 15.63V15.62ZM49.55 20.79H52.43C52.5671 21.0945 52.7988 21.3466 53.0907 21.5088C53.3826 21.6709 53.7191 21.7345 54.05 21.69C55.19 21.69 55.79 21.07 55.79 20.17V18.49H55.73C55.491 19.0049 55.1031 19.4363 54.6165 19.7287C54.1299 20.021 53.5668 20.1608 53 20.13C50.81 20.13 49.36 18.46 49.36 15.59C49.36 12.72 50.74 10.91 53.04 10.91C53.6246 10.8871 54.2022 11.0434 54.6955 11.3579C55.1888 11.6725 55.5742 12.1303 55.8 12.67V12.67V11H58.8V20.1C58.8 22.29 56.87 23.65 54.02 23.65C51.37 23.65 49.72 22.46 49.55 20.8V20.79ZM55.8 15.61C55.8 14.15 55.13 13.23 54.07 13.23C53.01 13.23 52.36 14.14 52.36 15.61C52.36 17.08 53 17.91 54.07 17.91C55.14 17.91 55.8 17.1 55.8 15.62V15.61ZM59.93 15.61C59.93 12.61 61.77 10.82 64.61 10.82C67.45 10.82 69.3 12.61 69.3 15.61C69.3 18.61 67.5 20.41 64.61 20.41C61.72 20.41 59.93 18.67 59.93 15.62V15.61ZM66.28 15.61C66.28 13.96 65.63 12.99 64.61 12.99C63.59 12.99 63 14 63 15.63C63 17.26 63.63 18.23 64.65 18.23C65.67 18.23 66.28 17.3 66.28 15.63V15.61ZM70.44 8.82C70.4321 8.51711 70.5144 8.2187 70.6763 7.96261C70.8383 7.70651 71.0726 7.50427 71.3496 7.38151C71.6266 7.25875 71.9338 7.221 72.2323 7.27305C72.5308 7.32511 72.8071 7.46462 73.0262 7.67389C73.2454 7.88317 73.3974 8.1528 73.4631 8.44859C73.5288 8.74438 73.5052 9.05301 73.3952 9.33536C73.2853 9.61772 73.094 9.86108 72.8456 10.0346C72.5973 10.2081 72.3029 10.304 72 10.31C71.7992 10.3238 71.5977 10.2959 71.4082 10.2281C71.2186 10.1603 71.0452 10.0541 70.8987 9.91601C70.7522 9.77796 70.6358 9.61111 70.5569 9.42594C70.4779 9.24077 70.4381 9.04128 70.44 8.84V8.82ZM70.44 11.02H73.44V20.2H70.44V11.02ZM84.33 15.61C84.33 18.61 83 20.32 80.72 20.32C80.1354 20.3575 79.5533 20.2146 79.0525 19.9106C78.5517 19.6065 78.1564 19.156 77.92 18.62H77.86V23.14H74.86V11H77.86V12.64H77.92C78.1454 12.0951 78.5332 11.6329 79.0306 11.3162C79.528 10.9995 80.1109 10.8437 80.7 10.87C83 10.91 84.37 12.63 84.37 15.63L84.33 15.61ZM81.33 15.61C81.33 14.15 80.66 13.22 79.61 13.22C78.56 13.22 77.89 14.16 77.88 15.61C77.87 17.06 78.56 17.99 79.61 17.99C80.66 17.99 81.33 17.08 81.33 15.63V15.61ZM89.48 10.81C91.97 10.81 93.48 11.99 93.55 13.88H90.82C90.82 13.23 90.28 12.82 89.45 12.82C88.62 12.82 88.25 13.14 88.25 13.61C88.25 14.08 88.58 14.23 89.25 14.37L91.17 14.76C93 15.15 93.78 15.89 93.78 17.28C93.78 19.18 92.05 20.4 89.5 20.4C86.95 20.4 85.28 19.18 85.15 17.31H88.04C88.13 17.99 88.67 18.39 89.55 18.39C90.43 18.39 90.83 18.1 90.83 17.62C90.83 17.14 90.55 17.04 89.83 16.89L88.1 16.52C86.31 16.15 85.37 15.2 85.37 13.8C85.39 12 87 10.83 89.48 10.83V10.81ZM103.79 20.18H100.9V18.47H100.84C100.681 19.0441 100.331 19.5466 99.8468 19.8941C99.3629 20.2415 98.7748 20.413 98.18 20.38C97.7242 20.4059 97.2682 20.3337 96.8427 20.1682C96.4172 20.0027 96.0322 19.7479 95.7137 19.4208C95.3952 19.0938 95.1505 18.7021 94.9964 18.2724C94.8422 17.8427 94.7821 17.3849 94.82 16.93V11H97.82V16.24C97.82 17.33 98.38 17.91 99.31 17.91C99.5281 17.9104 99.7437 17.8643 99.9425 17.7746C100.141 17.6849 100.319 17.5537 100.463 17.3899C100.606 17.226 100.714 17.0333 100.777 16.8247C100.84 16.616 100.859 16.3962 100.83 16.18V11H103.83L103.79 20.18ZM105.24 11H108.14V12.77H108.2C108.359 12.2035 108.702 11.7057 109.174 11.3547C109.646 11.0037 110.222 10.8191 110.81 10.83C111.409 10.7821 112.003 10.9612 112.476 11.3318C112.948 11.7024 113.264 12.2372 113.36 12.83H113.42C113.601 12.2309 113.977 11.7093 114.488 11.3472C114.998 10.9851 115.615 10.8031 116.24 10.83C116.648 10.8163 117.054 10.8886 117.432 11.0422C117.811 11.1957 118.152 11.4272 118.435 11.7214C118.718 12.0157 118.936 12.3662 119.075 12.7501C119.213 13.134 119.27 13.5429 119.24 13.95V20.2H116.24V14.75C116.24 13.75 115.79 13.29 114.95 13.29C114.763 13.2884 114.577 13.327 114.406 13.4032C114.235 13.4794 114.082 13.5914 113.958 13.7317C113.834 13.872 113.741 14.0372 113.686 14.2163C113.631 14.3955 113.616 14.5843 113.64 14.77V20.2H110.79V14.71C110.79 13.79 110.34 13.29 109.52 13.29C109.331 13.2901 109.143 13.3303 108.971 13.408C108.798 13.4858 108.643 13.5993 108.518 13.741C108.392 13.8827 108.298 14.0495 108.241 14.2304C108.185 14.4112 108.167 14.6019 108.19 14.79V20.2H105.19L105.24 11Z\"\n    fill=\"currentColor\"\n  />\n  <path\n    d=\"M26.48 8.62001C25.9711 7.45637 25.2975 6.37195 24.48 5.40001C23.2714 3.92035 21.7632 2.71341 20.0546 1.85862C18.346 1.00383 16.4758 0.520582 14.567 0.440674C12.6582 0.360766 10.7541 0.68601 8.98 1.395C7.20594 2.104 5.60214 3.18067 4.27417 4.55414C2.94619 5.92762 1.92414 7.56676 1.27529 9.36369C0.626436 11.1606 0.365493 13.0746 0.509634 14.9796C0.653775 16.8847 1.19973 18.7376 2.11157 20.4164C3.02341 22.0953 4.28046 23.562 5.79998 24.72C6.77498 25.4779 7.85233 26.094 8.99998 26.55C10.609 27.2094 12.3311 27.549 14.07 27.55C17.6594 27.5421 21.0992 26.1113 23.6354 23.5713C26.1717 21.0314 27.5973 17.5894 27.6 14C27.6026 12.1485 27.2213 10.3166 26.48 8.62001V8.62001ZM14.06 3.19001C15.6215 3.18984 17.1642 3.53115 18.58 4.19001V4.19001C18.2347 4.33918 17.8718 4.44337 17.5 4.50001C16.2766 4.67711 15.1432 5.24509 14.2691 6.11918C13.3951 6.99328 12.8271 8.12661 12.65 9.35001C12.5722 10.0361 12.2602 10.6744 11.7665 11.1572C11.2728 11.64 10.6277 11.9377 9.93998 12C8.71657 12.1771 7.58324 12.7451 6.70915 13.6192C5.83505 14.4933 5.26707 15.6266 5.08998 16.85C5.03002 17.5024 4.75167 18.1155 4.29998 18.59V18.59C3.52063 16.9433 3.17053 15.1261 3.28225 13.3077C3.39397 11.4893 3.96388 9.72871 4.93895 8.18976C5.91401 6.65081 7.26255 5.38353 8.85905 4.50586C10.4555 3.62819 12.2481 3.16865 14.07 3.17001L14.06 3.19001ZM5.78998 21C5.90998 20.89 6.02998 20.79 6.14998 20.67C7.03963 19.8075 7.61069 18.6689 7.76998 17.44C7.83456 16.7493 8.14298 16.1041 8.63998 15.62C9.11822 15.1222 9.76195 14.8163 10.45 14.76C11.6734 14.5829 12.8067 14.0149 13.6808 13.1408C14.5549 12.2667 15.1229 11.1334 15.3 9.91001C15.3432 9.18752 15.6533 8.50685 16.17 8.00001C16.66 7.51186 17.3099 7.21711 18 7.17001C19.1239 7.01537 20.1721 6.51573 21 5.74001C21.9426 6.52208 22.7413 7.46291 23.36 8.52001C23.322 8.57136 23.2784 8.61832 23.23 8.66001C22.7526 9.16221 22.1098 9.47477 21.42 9.54001C20.1953 9.71401 19.0603 10.281 18.1856 11.1557C17.311 12.0303 16.744 13.1654 16.57 14.39C16.4995 15.0784 16.1932 15.7213 15.7029 16.2098C15.2127 16.6982 14.5687 17.0021 13.88 17.07C12.653 17.2458 11.5154 17.8126 10.6363 18.6863C9.75713 19.5601 9.18328 20.6941 8.99998 21.92C8.94616 22.4087 8.77832 22.878 8.50998 23.29C7.48397 22.6808 6.56506 21.9072 5.78998 21V21ZM14.06 24.86C13.0452 24.8611 12.0354 24.7197 11.06 24.44C11.3936 23.818 11.6106 23.1402 11.7 22.44C11.7701 21.7531 12.0749 21.1114 12.5632 20.6232C13.0514 20.135 13.6931 19.8301 14.38 19.76C15.6052 19.5849 16.7408 19.0178 17.6168 18.1435C18.4929 17.2693 19.0624 16.1349 19.24 14.91C19.3101 14.2231 19.6149 13.5814 20.1032 13.0932C20.5914 12.605 21.2331 12.3001 21.92 12.23C22.842 12.1101 23.7208 11.7668 24.48 11.23C24.9015 12.8279 24.9515 14.5012 24.626 16.1214C24.3004 17.7416 23.6081 19.2657 22.6021 20.5768C21.5961 21.8879 20.3031 22.9511 18.8224 23.6849C17.3417 24.4187 15.7125 24.8036 14.06 24.81V24.86Z\"\n    fill=\"#2F855A\"\n/>\n</svg>*/}\n\n  return (\n    <LogoBW></LogoBW>\n  );\n};\n\nconst SocialButton = ({\n  children,\n  label,\n  href,\n}) => {\n  return (\n    <chakra.button\n      bg={useColorModeValue('blackAlpha.100', 'whiteAlpha.100')}\n      rounded={'full'}\n      w={8}\n      h={8}\n      cursor={'pointer'}\n      as={'a'}\n      href={href}\n      display={'inline-flex'}\n      alignItems={'center'}\n      justifyContent={'center'}\n      transition={'background 0.3s ease'}\n      _hover={{\n        bg: useColorModeValue('blackAlpha.200', 'whiteAlpha.200'),\n      }}>\n      <VisuallyHidden>{label}</VisuallyHidden>\n      {children}\n    </chakra.button>\n  );\n};\n\nconst ListHeader = ({children}) => {\n  return (\n    <Text fontWeight={'500'} fontSize={'lg'} mb={2}>\n      {children}\n    </Text>\n  );\n};\n\nexport default function Footerv2() {\n  return (\n    <Box\n      bg={useColorModeValue('#2d3748', 'gray.50')}\n      color={useColorModeValue('white', 'white.200')}>\n      <Container as={Stack} maxW={'8xl'} py={10}>\n        <SimpleGrid\n          templateColumns={{ sm: '1fr 1fr', md: '4fr 2fr 3fr 6fr' }}\n          spacing={2}>\n          <Stack spacing={6} align={'flex-center'}>\n            <Box>\n              {/* <Logo color={useColorModeValue('gray.700', 'white')} /> */}\n              <Image width='250px' src={LogoBW}></Image>\n       \n            </Box>\n            <Text fontSize={'sm'}>\n              © 2022 BharatSim. All rights reserved\n            </Text>\n            {/* <Stack direction={'row'} spacing={2}>\n              <SocialButton label={'Twitter'} href={'#'}>\n                <FaTwitter />\n              </SocialButton>\n              <SocialButton label={'YouTube'} href={'#'}>\n                <FaYoutube />\n              </SocialButton>\n              <SocialButton label={'Instagram'} href={'#'}>\n                <FaInstagram />\n              </SocialButton>\n            </Stack> */}\n          </Stack>\n\n          <Stack align={'flex-center'}>\n            <ListHeader>Community</ListHeader>\n            <Stack direction={'row'} spacing={2}>\n            <Link mt={1}><FaGithub></FaGithub></Link>\n            <Link href={'#'}>Github</Link>\n            </Stack>\n            {/* <Stack direction={'row'} spacing={2}>\n              <Link mt={1}><FaFacebook></FaFacebook></Link>\n            <Link href={'#'}>Facebook</Link>\n            </Stack>\n\n            <Stack direction={'row'} spacing={2}>\n            <Link mt={1}><FaLinkedin></FaLinkedin></Link>\n            <Link href={'#'}>Linkedin</Link>\n            </Stack> */}\n            \n            <Stack direction={'row'} spacing={2}>\n              <Link mt={1}><FaYoutube></FaYoutube></Link>\n              <Link href={'#'}>Youtube</Link>  \n              </Stack>\n\n            \n          </Stack>\n          <Stack align={'flex-center'}>\n            <ListHeader>Contact</ListHeader>\n            <Link href={'#'} fontWeight={500}>For users: </Link> \n            <Link>mail@mail.com</Link>\n\n            <Link href={'#'} fontWeight={500}>For developers: </Link>\n            <Link>mail2@mail2.com</Link>\n          </Stack>\n          <Stack align={'flex-center'}>\n            <ListHeader>License</ListHeader>\n            <p>\n            By exercising the Licensed Rights defined under the CC4 license, you accept and agree to be bound by the terms and conditions of Creative Commons Attribution 4.0 International Public License. \n           \n            </p>\n          </Stack>\n          {/* <Stack align={'flex-start'}>\n            <ListHeader>Stay up to date</ListHeader>\n            <Stack direction={'row'}>\n              <Input\n                placeholder={'Your email address'}\n                bg={useColorModeValue('blackAlpha.100', 'whiteAlpha.100')}\n                border={0}\n                _focus={{\n                  bg: 'whiteAlpha.300',\n                }}\n              />\n              <IconButton\n                bg={useColorModeValue('green.400', 'green.800')}\n                color={useColorModeValue('white', 'gray.800')}\n                _hover={{\n                  bg: 'green.600',\n                }}\n                aria-label=\"Subscribe\"\n                icon={<BiMailSend />}\n              />\n            </Stack>\n          </Stack> */}\n        </SimpleGrid>\n      </Container>\n    </Box>\n  );\n}","import React from \"react\";\nimport {\n  ChakraProvider,\n  Box,\n  Text,\n  Link,\n  VStack,\n  Code,\n  Grid,\n} from '@chakra-ui/react';\nimport Hero from \"../components/sections/Hero\";\nimport LandingLayout from \"../components/layouts/LandingLayout\";\nimport LandingHero from \"./LandingHero\";\nimport Footer from \"../components/sections/Footer\";\nimport Footerv2 from \"../components/sections/Footerv2\";\nimport theme from '../theme.js';\nexport default function Landing() {\n  return (\n    <ChakraProvider theme={theme}>\n    <LandingLayout>\n      {/* <Hero\n        title=\"Bharatsim\"\n        subtitle=\"This is the subheader section where you describe the basic benefits of your product\"\n        image=\"\"\n        ctaText=\"Create your account now\"\n        ctaLink=\"/signup\"\n      /> */}\n      <LandingHero/>\n    </LandingLayout>\n    {/* <Footer /> */}\n    <Footerv2 />\n    </ChakraProvider>\n  );\n}\n","import React from 'react';\n// import sections\n// <Cta split/> after testimonial\nimport './Publications.css'\nimport { Stack,HStack ,VStack, Header, theme,Container,Text,Flex, Spacer,Box,useColorModeValue,Link,Image } from '@chakra-ui/react'\n\nfunction Cards(){\n  return (\n    <Flex\n    //   bg={useColorModeValue(\"#F9FAFB\", \"gray.400\")}              \n      w=\"full\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <Box\n        mx=\"auto\"\n        px={8}\n        py={4}\n        rounded=\"lg\"\n        shadow=\"lg\"\n        bg={useColorModeValue(\"white\", \"gray.700\")}\n        maxW=\"2xl\"\n      >\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <span>\n            <Text\n            fontSize=\"sm\"\n            color={useColorModeValue(\"gray.600\", \"gray.400\")}\n            >\n            Mar 10, 2019\n          </Text>\n                              </span>\n          <Link\n            px={3}\n            py={1}\n            bg=\"gray.600\"\n            color=\"gray.100\"\n            fontSize=\"sm\"\n            fontWeight=\"700\"\n            rounded=\"md\"\n            _hover={{ bg: \"gray.500\" }}\n          >\n            Open\n          </Link>\n        </Flex>\n\n        <Box mt={2}>\n          <Link\n            \n            fontSize=\"2xl\"\n            color={useColorModeValue(\"gray.700\", \"white\")}\n            fontWeight=\"600\"\n            _hover={{\n              color: useColorModeValue(\"gray.600\", \"gray.200\"),\n              textDecor: \"underline\",\n            }}\n          >\n            Deep learning on chaos game representation for proteins\n          </Link>\n          <p>\n                <Text mt={2} color={useColorModeValue(\"gray.600\", \"gray.300\")}>\n                Hannah F. Lochel, Dominic Eger, Theeodor Sperlea\n              </Text>\n        </p>\n        </Box>\n\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mt={4}>\n          <Link\n            color={useColorModeValue(\"brand.600\", \"brand.400\")}\n            _hover={{ textDecor: \"underline\" }}\n          >\n            bioArXiv\n          </Link>\n\n          <Flex alignItems=\"center\">\n              {/* <Image\n              mx={4}\n              w={10}\n              h={10}\n              rounded=\"full\"\n              fit=\"cover\"\n              display={{ base: \"none\", sm: \"block\" }}\n              src=\"https://images.unsplash.com/photo-1502980426475-b83966705988?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=40&q=80\"\n              alt=\"avatar\"\n            />\n            <Link\n              color={useColorModeValue(\"gray.700\", \"gray.200\")}\n              fontWeight=\"700\"\n              cursor=\"pointer\"\n            >\n              Khatab wedaa\n            </Link>*/}\n          </Flex>\n        </Flex>\n      </Box>\n    </Flex>\n  );\n};\n\n\nconst Publications = () => {\n\n  return (\n    <>\n\n<VStack spacing={8} m={2} mb={3} > \n\n\n<Cards/>\n<Cards/>\n<Cards/>\n\n\n</VStack>\n \n\n \n\n \n      \n    </>\n  );\n}\n\nexport default Publications;","import React from 'react';\n// import sections\n// <Cta split/> after testimonial\nimport './People.css';\nimport { MdSettings,MdHeadset,MdLocationOn,MdEmail, MdWeb } from 'react-icons/md';\nimport {BsFillBriefcaseFill} from 'react-icons/bs';\n\nimport { HStack,Icon,Container,Text,Flex,Spacer,Box,useColorModeValue,Link,Image } from '@chakra-ui/react';\n\nimport { Center, Square, Circle } from '@chakra-ui/react'\n\n\nfunction ProfileCard({name,title,email,img_url}){\n  return (\n    <Flex\n    //   bg={useColorModeValue(\"#F9FAFB\", \"gray.600\")}\n      p={5}\n      w=\"full\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <Box\n        w=\"300px\"\n        h=\"400px\"\n        mx=\"auto\"\n        bg={useColorModeValue(\"white\", \"#351B59\")}\n        shadow=\"lg\"\n        rounded=\"lg\"\n        overflow=\"hidden\"\n      >\n        <Image\n          w=\"full\"\n          boxSize='350px'\n          h={56}\n          objectFit=\"contain\"\n          objectPosition=\"center\"\n          src={img_url}\n          alt=\"avatar\"\n        />\n\n        <Box py={4} px={6}>\n          <Text\n            fontSize=\"xl\"\n            fontWeight=\"bold\"\n            color={useColorModeValue(\"gray.800\", \"white\")}\n          >\n            {name}\n          </Text>\n\n          <Text py={2} color={useColorModeValue(\"gray.700\", \"gray.400\")}>\n            {title}\n          </Text>\n{/*\n          <Flex\n            alignItems=\"center\"\n            mt={4}\n            color={useColorModeValue(\"gray.700\", \"gray.200\")}\n          >\n            <Icon\n              as={BsFillBriefcaseFill}\n              as={BsFillBriefcaseFill}\n              h={6}\n              w={6}\n              mr={2}\n            />\n\n            <Text px={2} fontSize=\"sm\">\n              Choc UI\n            </Text>\n          </Flex>\n\n          <Flex\n            alignItems=\"center\"\n            mt={4}\n            color={useColorModeValue(\"gray.700\", \"gray.200\")}\n          >\n\n          <Icon as={MdLocationOn} h={6} w={6} mr={2} />\n\n            <Text px={2} fontSize=\"sm\">\n              California\n            </Text>\n\n          </Flex>*/}\n          <Flex\n            alignItems=\"center\"\n            mt={4}\n            color={useColorModeValue(\"gray.700\", \"gray.200\")}\n          >\n            <Icon as={MdEmail} h={6} w={6} mr={2} />\n\n            <Text px={2} fontSize=\"sm\">\n              {email}\n            </Text>\n          </Flex>\n\n\n\n        </Box>\n      </Box>\n    </Flex>\n  );\n};\nconst People = () => {\n\n  return (\n    <>\n    <div className=\"topContainer-people\">\n    <Flex direction=\"column\">\n\n        <Center>\n          <Text fontSize='xl' fontWeight={700}> Ashoka University Team</Text>\n        </Center>\n\n      <Flex direction=\"row\">\n\n      <ProfileCard name=\"Gautam Menon\" title=\"Professor of Physics and Biology\" img_url=\"https://www.ashoka.edu.in/wp-content/uploads/2021/04/Untitled-design-55.png\" email=\"gautam.menon@ashoka.edu.in\"/>\n      <ProfileCard name=\"Debayan Gupta\" title=\"Assistant Professor of Computer Science\" img_url={require('../assets/people/DebG.jpeg')} email=\"debayan.gupta@ashoka.edu.in\"/>\n      <ProfileCard name=\"Bhavesh Neekhra\" title=\"Graduate Student, Computer Science\" img_url={require('../assets/people/Bhavesh_Neekhra_AU.jpeg')} email=\"bhavesh.neekhra_phd18@ashoka.edu.in\"/>\n      <ProfileCard name=\"Philip Cherian\" title=\"Graduate Student, Physics\" img_url={require('../assets/people/Philip_Profile.jpg')} email=\"philip.cherian@ashoka.edu.in\"/>\n\n      </Flex>\n\n      <br></br>\n      <br></br>\n\n      <Center>\n      <Text fontSize='xl' fontWeight={700}> Thoughtworks Team</Text>\n      </Center>\n\n      <Flex direction=\"row\">\n\n      <ProfileCard name=\"Jayanta Kshirsagar\" title=\"Engineering for Research\" img_url={require('../assets/people/jayanta1.jpg')} email=\"jayantak@thoughtworks.com\"/>\n      <ProfileCard name=\"Praveen Ninawe\" title=\"Engineering for Research\" img_url={require('../assets/people/praveen.jpg')} email=\"praveen.ninawe@thoughtworks.com\"/>\n      <ProfileCard name=\"Harshal Hayatnagarkar\" title=\"Engineering for Research\" img_url={require('../assets/people/harshal.png')} email=\"harshalh@thoughtworks.com\"/>\n      <ProfileCard name=\"Chhaya Yadav\" title=\"Engineering for Research\" img_url={require('../assets/people/chhaya.jpeg')} email=\"chhayay@thoughtworks.com\"/>\n\n      </Flex>\n\n\n\n    </Flex>\n\n    </div>\n\n\n\n    </>\n  );\n}\n\nexport default People;\n","import React from 'react';\nimport { Stack,Button,HStack ,VStack, theme,Container,Text,Flex, Spacer,Box,useColorModeValue,LinkImage,Image,Link} from '@chakra-ui/react'\n// import SectionImgA from '../assets/tsne.png'\nimport {Link as InnerLink} from 'react-router-dom'\n\nfunction Cards(props){\n    return (\n<Flex\nbg={useColorModeValue(\"#F9FAFB\", \"gray.600\")}\np={50}\nw=\"auto\"\nalignItems=\"center\"\njustifyContent=\"center\"\nflexDirection=\"column\"\n>\n  <Box\n    bg={useColorModeValue(\"gray.100\", \"gray.700\")}\n    mx={{ lg: 8 }}\n    display={{ lg: \"flex\" }}\n    maxW={{ lg: \"xl\" }}\n    shadow={{ lg: \"lg\" }}\n    rounded={{ lg: \"lg\" }}\n  >\n      <Box w={{ lg: \"30%\" }} backgroundColor='tomato'>\n        <Box\n          h={{ base: 64, lg: \"full\" }}\n          rounded={{ lg: \"lg\" }}\n          bgSize=\"cover\"\n          bgRepeat=\"none\"\n          backgroundImage={\"url('\" + props.imageUrl + \"')\"}\n        ></Box>\n        <Image src={props.imageUrl}></Image>\n      </Box>\n\n  <Box py={12} px={6} maxW={{ base: \"xl\", lg: \"5xl\" }} w={{ lg: \"50%\" }}>\n    <Text\n      fontSize={{ base: \"2xl\", md: \"3xl\" }}\n      color={useColorModeValue(\"gray.800\", \"white\")}\n      fontWeight=\"bold\"\n    >\n      {props.title}\n    </Text>\n    <Text mt={4} color={useColorModeValue(\"gray.600\", \"gray.400\")}>\n      {props.body}\n    </Text>\n\n    <Box mt={8}>\n      <InnerLink to={props.external_link}>\n      <Button\n\n        bg=\"gray.900\"\n        color=\"gray.100\"\n        px={5}\n        py={3}\n        fontWeight=\"semibold\"\n        rounded=\"lg\"\n        _hover={{ bg: \"gray.800\" }}\n      >\n       Read More\n      </Button>\n      </InnerLink>\n    </Box>\n\n  </Box>\n</Box>\n\n</Flex>\n    );\n  };\n\n\n  function Ma (props) {\n    return (\n      <Flex\n      px={2}\n      pb={4}\n      bg={\"transparent\"}\n      direction=\"column\"\n      w=\"full\"\n      justify='space-around'\n      >\n        <Box\n          maxW=\"5xl\"\n          mx=\"auto\"\n          // minH=\"xl\"\n          minH=\"700px\"\n          bg={useColorModeValue(\"white\", \"gray.800\")}\n          shadow=\"lg\"\n          rounded=\"lg\"\n        >\n          <Box minH=\"10%\">\n          <Image\n            w=\"350px\"\n            h=\"300px\"\n            mt=\"20%\"\n            p=\"5%\"\n            objectFit=\"contain\"\n            src={props.imageUrl}\n            alt=\"img1\"\n          />\n          </Box>\n          <Spacer></Spacer>\n          <Box px={4} py={2}>\n            <Text\n              color={useColorModeValue(\"gray.800\", \"white\")}\n              fontWeight=\"bold\"\n              fontSize=\"2xl\"\n\n            >\n              {props.title}\n            </Text>\n            <Text\n              mt={1}\n              mb={1}\n              fontSize=\"sm\"\n              color={useColorModeValue(\"gray.600\", \"gray.400\")}\n            >\n              {props.body}\n            </Text>\n            <Box mt={7} mb={4}>\n              <InnerLink to={props.external_link}>\n              <Button\n                bg=\"gray.900\"\n                color=\"gray.100\"\n                px={5}\n                py={3}\n                fontWeight=\"semibold\"\n                rounded=\"lg\"\n                _hover={{ bg: \"black.800\" }}\n                to={props.external_link}>\n              Read More\n              </Button>\n              </InnerLink>\n           </Box>\n          </Box>\n\n\n        </Box>\n      </Flex>\n    );\n  };\n\n  const Projects = (props) => {\n\n return(\n   <Container w=\"full\" maxW={\"6xl\"}  >\n      <HStack spacing={2}>\n        <Ma imageUrl=\"https://i.ibb.co/qrRnDCw/tsne.png\"  external_link=\"/simulation_engine\" title=\"The Simulation Engine\" body=\"A simulation framework to model agents with heteregenous attributes and in a realistic geographical background.\"/>\n        <Ma imageUrl=\"https://i.ibb.co/jkbW30f/india-viz.png\"   external_link=\"/viz_engine\" title=\"The Visualization Engine\" body=\" A web app that enables visualization of the output of the simulation engine and the synthetic population.\"/>\n        <Ma imageUrl=\"https://i.ibb.co/ThtKFNK/undraw-hologram-fjwp.png\"  external_link=\"/synthetic_population\" title=\"The Synthetic Population\" body=\"A synthetic representation of the Indian population in each district containing for each agent attributes like home and work locations, age and gender.\"/>\n      </HStack>\n    </Container>\n );\n  }\n\n    export default Projects;\n","import React from 'react'\nimport theme from '../theme.js';\nimport Header from '../components/sections/Header.js';\n \nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { AiOutlineArrowLeft,AiOutlineArrowRight } from \"react-icons/ai\";\nimport {\n  ChakraProvider,\n  Center,\n  Image,\n  Box,\n  HStack,\n  Vstack,\n  Text,\n  Link,\n  VStack,\n  Flex,\n  Code,\n  Heading,\n  Grid,\n  Container,\n  Spacer,\n  Stack,\n  Button,\n} from '@chakra-ui/react';\nimport {Link as InnerLink} from 'react-router-dom'\n\nfunction SimulationEngine() {\n  return (\n    <>\n    <ChakraProvider theme={theme}>\n    <Header bg=\"#392F74\" ></Header>\n    </ChakraProvider>\n\n    <Center>\n    <Container maxW='container.xl' flexDirection=\"column\" ml={3} mr={3}>\n      <Center>\n      <Text p={2} m={2} align='justify'>\n\n      <Center>\n      <Heading size=\"lg\" p={2}>The Simulation Engine</Heading>\n      </Center><br/>\n      Mathematical and computational approaches to the dynamics of an infectious disease have a long history. Models first described by Kermack and McKendrick  describe the how fractions of susceptible (S), infectious (I) and recovered (R) individuals of a population change over time. The dynamics of S, I and R are prescribed through coupled non-linear ordinary differential equations. Compartmental models ignore all variation at the individual level, and also assume that the population is well-mixed. Such models neglect complications associated with spatial variations in incidence and elide the interplay of social factors, such as family sizes, community networks and socio-economic status on disease dynamics. <br/><br/>\n\n      Beyond compartmental models, network and agent-based (equivalently individual-based) approaches implement individual-level granularity. Realistic networks describing the interactions between people can contain a few highly connected nodes. Targeting such nodes, ``super-spreaders'' in the context of infectious disease dynamics, can have an overwhelmingly large effect compared to interventions that treat all nodes equivalently. Both network and agent-based models require many more assumptions, especially regarding the nature of contacts that lead to infection. However, they provide a more detailed way of understanding disease dynamics than is possible through compartmental models. They can thus also be used to assess the effects of targeted interventions, such as lock-downs and restrictions on public transport, in a more precise way.<br/><br/>\n\n      A number of agent-based models have been used to study disease dynamics. There are relatively few such models for India. One, the IISc-TIFR city-based simulator, has been used to model COVID-19 spread in the major Indian cities of Bengaluru and Mumbai.  Results from these models include the evaluation of strategies for reopening public transport in the background of an epidemic at different stages of its trajectory as well as studies of the impact of lock-downs and related interventions.<br/><br/>\n\n      The agent-based simulation framework described here, BharatSim, defines and uses a more detailed description of the population than those in earlier work. Additionally, BharatSim is a framework, i.e. it provides a mechanism for users to address specific requirements easily instead of being forced to modify a large, existing base of code. While applications are designed to respond to a specific question, a simulation framework is more general. The simulation framework thus insulates the user from unnecessary implementation details, while providing them with sufficient flexibility.<br/><br/>\n\n\n        BharatSim defines and uses a synthetic population that is a detailed and granular description of the population that is also statistically faithful. The simulation engine accepts this population as a CSV file. Additionally, the engine was designed so that it would be able to scale up to large population sizes without significant overhead or degradation in speed, given that one use of BharatSim would be to simulate populations of the size of an average Indian state, which also required the framework to implement efficient data structures and algorithms. Finally, we intended that BharatSim be usable on a range of conventionally available hardware ranging from personal laptops to High Performance Computing (HPC) clusters. Flexibility was another design imperative: we wanted modellers from a range of backgrounds, perhaps even lacking significant programming experience, to be able to easily define a new model and add further levels of abstraction, thus extending the framework in new ways.\n       </Text>\n       </Center>\n       <br></br>\n       <Heading size=\"md\" m={2} p={2}>Structure of the simulation engine</Heading>\n       <Center>\n          <Text p={2} m={2} align='justify'>\n\n            <Box p={2} m={2} backgroundColor='white'>\n            <Center>\n              <Image width=\"70%\" ml=\"7%\"mr=\"7%\" pt=\"4%\" pb=\"4%\" src={require(\"../assets/graph.png\")}></Image>\n            </Center>\n            </Box>\n\n\n          All data in the simulation engine is stored in a <b>Graph</b>. This graph is a network of nodes which can represent both individual agents as well as locations such as households or offices. The framework defines a <tt>Node</tt> class which allows for relations to be established between other such nodes.\n          The <tt>Node</tt> class is further extended to define the <tt>Agent</tt> and <tt>Network</tt> classes. The <tt>Network</tt> classes can then be further extended to define specific locations like a <tt>Home</tt> or a <tt>Workplace</tt> class. Thus a typical graph might be one that's shown in the figure below: individual agents (extensions of the <tt>Person</tt> class) are connected to Homes and Workplaces (both extensions of the <tt>Network</tt> class).\n\n\n            <Box p={2} m={2} backgroundColor='white'>\n            <Center>\n              <Image width=\"70%\" ml=\"7%\"mr=\"7%\" pt=\"4%\" pb=\"4%\" src={require(\"../assets/nodes.png\")}></Image>\n            </Center>\n            </Box>\n\n\n          One could then establish relations between these nodes. For example, every Agent could be a resident of a specific house (specified by a <tt>HouseholdID</tt>) and be employed by a specific workplace (specified by the <tt>WorkplaceID</tt>). The relations are bidirectional, and require one to additionally specify that the home houses -- and the workplace employs -- that particular Agent (specified by the <tt>AgentID</tt>).\n\n\n            <Box p={2} m={2} backgroundColor='white'>\n            <Center>\n              <Image width=\"70%\" ml=\"7%\"mr=\"7%\" pt=\"4%\" pb=\"4%\" src={require(\"../assets/relations.png\")}></Image>\n            </Center>\n            </Box>\n\n          </Text>\n       </Center>\n\n\n       <Text p={2} m={2} align='justify'>\n\n       Using an abstraction like a graph makes the framework domain independent and flexible. This graph can be implemented in one of two ways, either by using <Link style={{color:\"blue\"}} variant=\"outline\" href=\"https://neo4j.com/\" target={\"_blank\"}>Neo4j</Link>, a graph database, or using the Scala programming language's scalable map implementation <Link style={{color:\"blue\"}} target={\"_blank\"} href=\"https://www.scala-lang.org/api/2.12.8/scala/collection/concurrent/TrieMap.html\">TrieMap</Link>. The modeller can choose either of these implementations. Both these structures were chosen since they optimized data operations, allowing the simulation to scale efficiently to larger populations. The simulation engine framework allows modellers to directly specify their models using its own language. This domain-specific language is itself based on <i>Scala</i>, the language that the simulation framework has been written in. This allows modellers to extend their knowledge of <i>Scala</i> when creating their models.\n        </Text>\n\n        <Heading size=\"md\" m={2} p={2}>The <tt>Agent</tt> and <tt>StatefulAgent</tt> classes</Heading>\n        <Text p={2} m={2} align='justify'>\n          The <tt>Agent</tt> class can be extended to specify a custom agent in a model with specific attributes. These could be general attributes like <tt>householdID</tt> or a <tt>workplaceID</tt>, or model-specific attributes like <tt>relativeSusceptibility</tt> which defines the relative susceptibility the individual has to being infected. A pre-defined extension of the <tt>Agent</tt> class is the <tt>StatefulAgent</tt> class, which endows the <tt>Agent</tt> with a <a href=\"https://en.wikipedia.org/wiki/Finite-state_machine\">Finite-State Machine</a>, allowing them to be in one -- and only one -- disease state at any given time.\n\n          <Box p={2} m={2} backgroundColor='white'>\n          <Center>\n            <Image width=\"60%\" ml=\"7%\"mr=\"7%\" pt=\"5%\" pb=\"5%\" src={require(\"../assets/person.png\")}></Image>\n          </Center>\n          </Box>\n\n\n          In addition, certain abstract and highly-used concepts have been highlighted and defined using the framework's language, like schedules that govern the movement of individuals, and behaviours which are actions that are performed by every agent at every time-step.\n          </Text>\n\n          <Heading size=\"sm\" m={2} p={2}>Schedules</Heading>\n\n          <Text p={2} m={2} align='justify'>\n          Every individual agent follows a schedule that is defined by the modeller. Such schedules specify agent locations across time. These schedules can be dynamic, can depend on the current state of the agent, and can be affected by interventions that are imposed. For example, one could define a different schedules for individuals, depending on whether they are above the age of 20 or below it. In the former case, these individuals could be considered as \"employees\", who go from home to work, while in the latter case, they could be \"students\" who go from home to school. These conditions can be made as general or specific as necessary: for example, one could define a schedule for all agents who happen to be symptomatic, which involves them spending more time at home rather than at work or school, thereby exploring the effect of \"quarantining\" symptomatic individuals. Thus, complicated network structures can be modelled by incorporating granularity into the schedules of different individuals. <br/><br/>\n\n\n            <Box p={2} m={2} backgroundColor='white'>\n            <Center>\n              <Image width=\"70%\" ml=\"7%\"mr=\"7%\" pt=\"5%\" pb=\"5%\" src={require(\"../assets/schedules.png\")}>\n              </Image>\n              </Center>\n            </Box>\n\n        </Text>\n\n        <Heading size=\"sm\" m={2} p={2}>Behaviours</Heading>\n\n        <Text p={2} m={2} align='justify'>\n          A behaviour is an action that is performed by each agent at every time-step, and can be defined within the user-defined extension of the <tt>Agent</tt> class using the framework-defined <tt>addBehaviour</tt> function. These behaviours can be used to model (for example) whether or not an individual will go to a vaccination centre to get vaccinated, or alternatively to count the number of days that an individual has spent in the infected compartment. Such behaviours thus give the modeller the flexibility to perform a repetitive task per agent per time-step.\n        </Text>\n        <Flex  p={4} mb={2}>\n        <InnerLink to='/synthetic_population'>\n        <Button leftIcon={<AiOutlineArrowLeft/>}>\n            Synthetic Population    \n            </Button>\n          </InnerLink>\n          \n          <Spacer></Spacer>\n\n          <InnerLink to='/viz_engine'>\n          <Button rightIcon={<AiOutlineArrowRight/>}>\n              Visualization Engine\n            </Button>\n          </InnerLink>\n        </Flex>\n    </Container>\n    </Center>\n    </>\n  )\n}\n\nexport default SimulationEngine","import React from 'react';\nimport theme from '../theme.js';\nimport Header from '../components/sections/Header.js';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport {Link as InnerLink} from 'react-router-dom'\n\nimport {\n  ChakraProvider,\n  Center,\n  Image,\n  Box,\n  HStack,\n  Vstack,\n  Button,\n  Text,\n  Link,\n  VStack,\n  Flex,\n  Code,\n  Heading,\n  Grid,\n  Container,\n  Spacer,\n} from '@chakra-ui/react';\n\nimport { AiOutlineArrowLeft,AiOutlineArrowRight } from \"react-icons/ai\";\n\nimport {\n    Table,\n    Thead,\n    Tbody,\n    Tfoot,\n    Tr,\n    Th,\n    Td,\n    TableCaption,\n  } from '@chakra-ui/react'\nfunction SyntheticPopulation() {\n  return (\n    <>\n        <ChakraProvider theme={theme}>\n        <Header bg=\"#392F74\" ></Header>\n        <Center>\n        <Container maxW='container.xl' m={3}>\n          <Text m={2} p={2} align='justify'>\n          <Center><Heading size=\"lg\" p={2}>The Synthetic Population</Heading></Center><br/>\n            At the core of BharatSim is a simulated synthetic population, generated using multiple data sources. The resulting population of individuals and households with demographic attributes resembles “reality”: in that if an identical survey were carried out with the synthetic population, it would bear results that statistically similar to the true population.\n          </Text>\n          <Text m={2} p={2} align='justify'>\n           A synthetic population is a simplified individual-level representation of the actual population. This means that while every person is represented individually in it, not all of their attributes are included (for example, hair colour or shoe-size are deemed to be irrelevant for modelling epidemic spread, and are thus ignored, while the presence of commodities like diabetes would be included). As such, a synthetic population does not aim to be identical to the actual population, but instead attempts to match its various statistical distributions and correlations, thereby being sufficiently close to the true population to be used in modelling.<br></br>\n           </Text>\n\n           <Heading size=\"md\" m={2} p={2}>An example</Heading>\n           <Text m={2} p={2} align='justify'>\n\n           In the table below, you can see an example of a section of a synthetic population. Each row represents an individual with a unique ID, as well as certain attributes. These attributes could be related to the individual themselves (like their gender, age, and height and so on), or their network (details pertaining to their homes, workplaces, and possibly schools). Additionally, the population could also contain information regarding the individual’s comorbidities (for example, whether they have diabetes or other preexisting conditions), if this is deemed relevant to the modelling exercise.\n          </Text>\n\n          <br></br>\n                  <Box overflowX=\"auto\" maxWidth=\"100%\">\n                <Table size='sm' maxW='500px'>\n      <Thead>  <Tr>\n          <Th>Agent_ID</Th>\n          <Th>SexLabel</Th>\n          <Th>Age</Th>\n          <Th>Height</Th>\n          <Th>Weight</Th>\n          <Th>JobLabel</Th>\n          <Th>StateLabel</Th>\n          <Th>District</Th>\n          <Th>AdminUnitName</Th>\n          <Th>AdminUnitLatitude</Th>\n          <Th>AdminUnitLongitude</Th>\n          <Th>HHID</Th>\n          <Th>H_Lat</Th>\n          <Th>H_Lon</Th>\n          <Th>WorkPlaceID</Th>\n          <Th>W_Lat</Th>\n          <Th>W_Lon</Th>\n          <Th>school_id</Th>\n          <Th>school_lat</Th>\n          <Th>school_long</Th>\n          <Th>public_place_id</Th>\n          <Th>public_place_lat</Th>\n          <Th>public_place_long</Th>\n          <Th>essential_worker</Th>\n          <Th>Adherence_to_Intervention</Th>\n          <Th>M_High_BP</Th>\n          <Th>M_Diabetes</Th>\n        </Tr>\n      </Thead>\n      <Tbody>\n        <Tr>\n          <Td>99802077568</Td>\n          <Td>Female</Td>\n          <Td>76</Td>\n          <Td>147.37</Td>\n          <Td>49.05</Td>\n          <Td>Construction</Td>\n          <Td>Maharashtra</Td>\n          <Td>Pune</Td>\n          <Td>Mohammadwadi-Kausar Baug</Td>\n          <Td>18.47477</Td>\n          <Td>73.89257</Td>\n          <Td>99801684702</Td>\n          <Td>18.46709</Td>\n          <Td>73.90603</Td>\n          <Td>2001000003467</Td>\n          <Td>18.4679</Td>\n          <Td>73.89859</Td>\n          <Td>0</Td>\n          <Td></Td>\n          <Td></Td>\n          <Td>3001000000062</Td>\n          <Td>18.45035</Td>\n          <Td>73.87068</Td>\n          <Td>0</Td>\n          <Td>1</Td>\n          <Td>0</Td>\n          <Td>0</Td>\n        </Tr>\n        <Tr>\n          <Td>99801380107</Td>\n          <Td>Male</Td>\n          <Td>37</Td>\n          <Td>162.03</Td>\n          <Td>57.94</Td>\n          <Td>Ag labour</Td>\n          <Td>Maharashtra</Td>\n          <Td>Pune</Td>\n          <Td>Nagpur Chawl-Phule Nagar</Td>\n          <Td>18.55893</Td>\n          <Td>73.87609</Td>\n          <Td>99801248473</Td>\n          <Td>18.55952</Td>\n          <Td>73.87877</Td>\n          <Td>2001000006630</Td>\n          <Td>18.58283</Td>\n          <Td>73.91661</Td>\n          <Td>0</Td>\n          <Td></Td>\n          <Td></Td>\n          <Td>3001000001044</Td>\n          <Td>18.52699</Td>\n          <Td>73.83451</Td>\n          <Td>1</Td>\n          <Td>0</Td>\n          <Td>0</Td>\n          <Td>0</Td>\n        </Tr>\n        <Tr>\n          <Td>99802408169</Td>\n          <Td>Male</Td>\n          <Td>6</Td>\n          <Td>111.21</Td>\n          <Td>23.13</Td>\n          <Td>Student</Td>\n          <Td>Maharashtra</Td>\n          <Td>Pune</Td>\n          <Td>Kharadi-Chandan Nagar</Td>\n          <Td>18.56355</Td>\n          <Td>73.93256</Td>\n          <Td>99800525921</Td>\n          <Td>18.54846</Td>\n          <Td>73.94971</Td>\n          <Td>0</Td>\n          <Td></Td>\n          <Td></Td>\n          <Td>2001000002070</Td>\n          <Td>18.55683</Td>\n          <Td>73.94757</Td>\n          <Td>3001000000274</Td>\n          <Td>18.54904</Td>\n          <Td>73.9491</Td>\n          <Td>0</Td>\n          <Td>1</Td>\n          <Td>0</Td>\n          <Td>0</Td>\n        </Tr>\n        <Tr>\n          <Td>99800402683</Td>\n          <Td>Female</Td>\n          <Td>37</Td>\n          <Td>152.65</Td>\n          <Td>52.61</Td>\n          <Td>Ag labour</Td>\n          <Td>Maharashtra</Td>\n          <Td>Pune</Td>\n          <Td>Karve Nagar</Td>\n          <Td>18.49149</Td>\n          <Td>73.82173</Td>\n          <Td>99800473441</Td>\n          <Td>18.48539</Td>\n          <Td>73.82129</Td>\n          <Td>2001000006876</Td>\n          <Td>18.53875</Td>\n          <Td>73.92594</Td>\n          <Td>0</Td>\n          <Td></Td>\n          <Td></Td>\n          <Td>3001000000650</Td>\n          <Td>18.48382</Td>\n          <Td>73.79731</Td>\n          <Td>1</Td>\n          <Td>0</Td>\n          <Td>0</Td>\n          <Td>0</Td>\n        </Tr>\n        <Tr>\n          <Td>99800824202</Td>\n          <Td>Female</Td>\n          <Td>35</Td>\n          <Td>150.92</Td>\n          <Td>52.42</Td>\n          <Td>Homebound</Td>\n          <Td>Maharashtra</Td>\n          <Td>Pune</Td>\n          <Td>Deccan Gymkhana-Model Colony</Td>\n          <Td>18.51845</Td>\n          <Td>73.83391</Td>\n          <Td>99800895513</Td>\n          <Td>18.52335</Td>\n          <Td>73.85339</Td>\n          <Td>0</Td>\n          <Td></Td>\n          <Td></Td>\n          <Td>0</Td>\n          <Td></Td>\n          <Td></Td>\n          <Td>3001000000236</Td>\n          <Td>18.54026</Td>\n          <Td>73.91186</Td>\n          <Td>0</Td>\n          <Td>0</Td>\n          <Td>0</Td>\n          <Td>0</Td>\n        </Tr>\n        <Tr>\n          <Td>99801178045</Td>\n          <Td>Female</Td>\n          <Td>50</Td>\n          <Td>151.51</Td>\n          <Td>50.1</Td>\n          <Td>Ag labour</Td>\n          <Td>Maharashtra</Td>\n          <Td>Pune</Td>\n          <Td>Shanivar Peth-Sadashiv Peth</Td>\n          <Td>18.51944</Td>\n          <Td>73.85194</Td>\n          <Td>99801142021</Td>\n          <Td>18.51388</Td>\n          <Td>73.84935</Td>\n          <Td>2001000000636</Td>\n          <Td>18.50785</Td>\n          <Td>73.84921</Td>\n          <Td>0</Td>\n          <Td></Td>\n          <Td></Td>\n          <Td>3001000001403</Td>\n          <Td>18.51024</Td>\n          <Td>73.84731</Td>\n          <Td>0</Td>\n          <Td>0.9</Td>\n          <Td>0</Td>\n          <Td>0</Td>\n        </Tr>\n        <Tr>\n          <Td>99802883562</Td>\n          <Td>Female</Td>\n          <Td>14</Td>\n          <Td>139.25</Td>\n          <Td>37.81</Td>\n          <Td>Student</Td>\n          <Td>Maharashtra</Td>\n          <Td>Pune</Td>\n          <Td>Viman Nagar-Somnath Nagar</Td>\n          <Td>18.55818</Td>\n          <Td>73.92165</Td>\n          <Td>99801268501</Td>\n          <Td>18.57398</Td>\n          <Td>73.9285</Td>\n          <Td>0</Td>\n          <Td></Td>\n          <Td></Td>\n          <Td>2001000000159</Td>\n          <Td>18.52152</Td>\n          <Td>73.92834</Td>\n          <Td>3001000000633</Td>\n          <Td>18.56121</Td>\n          <Td>73.93799</Td>\n          <Td>0</Td>\n          <Td>0.8</Td>\n          <Td>0</Td>\n          <Td>0</Td>\n        </Tr>\n        <Tr>\n          <Td>99800390824</Td>\n          <Td>Male</Td>\n          <Td>19</Td>\n          <Td>157.71</Td>\n          <Td>50.84</Td>\n          <Td>Plantation lab</Td>\n          <Td>Maharashtra</Td>\n          <Td>Pune</Td>\n          <Td>Salisbury Park-Maharshi Nagar</Td>\n          <Td>18.49162</Td>\n          <Td>73.8661</Td>\n          <Td>99800461238</Td>\n          <Td>18.49814</Td>\n          <Td>73.87331</Td>\n          <Td>2001000011846</Td>\n          <Td>18.49934</Td>\n          <Td>73.8511</Td>\n          <Td>0</Td>\n          <Td></Td>\n          <Td></Td>\n          <Td>3001000000528</Td>\n          <Td>18.46247</Td>\n          <Td>73.85122</Td>\n          <Td>0</Td>\n          <Td>0.4</Td>\n          <Td>0</Td>\n          <Td>0</Td>\n        </Tr>\n        <Tr>\n          <Td>99800144374</Td>\n          <Td>Female</Td>\n          <Td>50</Td>\n          <Td>152.6</Td>\n          <Td>50.58</Td>\n          <Td>Homebound</Td>\n          <Td>Maharashtra</Td>\n          <Td>Pune</Td>\n          <Td>Dhanakvadi-Ambegaon Pathar</Td>\n          <Td>18.45878</Td>\n          <Td>73.84264</Td>\n          <Td>99800193269</Td>\n          <Td>18.46661</Td>\n          <Td>73.8561</Td>\n          <Td>0</Td>\n          <Td></Td>\n          <Td></Td>\n          <Td>0</Td>\n          <Td></Td>\n          <Td></Td>\n          <Td>3001000001414</Td>\n          <Td>18.46532</Td>\n          <Td>73.89147</Td>\n          <Td>0</Td>\n          <Td>0.9</Td>\n          <Td>0</Td>\n          <Td>0</Td>\n        </Tr>\n        <Tr>\n          <Td>99800944765</Td>\n          <Td>Female</Td>\n          <Td>45</Td>\n          <Td>151.99</Td>\n          <Td>50.99</Td>\n          <Td>Homebound</Td>\n          <Td>Maharashtra</Td>\n          <Td>Pune</Td>\n          <Td>Kharadi-Chandan Nagar</Td>\n          <Td>18.56355</Td>\n          <Td>73.93256</Td>\n          <Td>99800978186</Td>\n          <Td>18.54808</Td>\n          <Td>73.94093</Td>\n          <Td>0</Td>\n          <Td></Td>\n          <Td></Td>\n          <Td>0</Td>\n          <Td></Td>\n          <Td></Td>\n          <Td>3001000001402</Td>\n          <Td>18.5684</Td>\n          <Td>73.82062</Td>\n          <Td>0</Td>\n          <Td>0.9</Td>\n          <Td>0</Td>\n          <Td>0</Td>\n        </Tr>\n      </Tbody>\n      </Table>\n      </Box>\n          <br>\n          </br>\n\n          <Text m={2} p={2} align='justify'>\n              All of these attributes are strongly correlated with each other and a good synthetic population will ideally be able reproduce the correlations that occur in the real world. However, this is a monumental task; real world data is complex, and often contains many artifacts that need to be addressed.\n          </Text>\n\n          <Heading size=\"md\" m={2} p={2}>Generating the population</Heading>\n          <Text m={2} p={2} align='justify'>\n            We use a variety of data sources to generate a population of individuals and households with demographic attributes that are statistically identical to real data. This population is generated using statistical methods and machine learning algorithms that are flexible enough to generate data at various administrative levels, ranging from small communities to states. The primary sources of data for these algorithms include the Census of India, the India Human Development Survey (IHDS), the National Sample Survey (NSS), the National Family Health Welfare Survey (NFHS), and the Gridded Population of the World (GPW).\n\n            While the synthetic population should faithfully reproduce demographic statistics, it must also incorporate other realistic network structures, such as those appropriate to households and workplaces. (Otherwise, we could end up, for example, with ``families'' composed entirely of toddlers, or workplaces with strange mixes of professions.) Because different kinds of data respond well to different techniques, a hybrid process is used to scale up these datasets. First, the data is cleaned to remove obvious inconsistencies. Next, a customized hybrid of Iterative Proportional Fitting (IPF), Iterative Proportional Updating (IPU), and a specialized variant of a neural network, called Conditional-Tabular Generative Adversarial Network (CTGAN), is used to generate new data.\n\n            Briefly, <Link style={{color:\"blue\"}} variant=\"outline\" href=\"https://en.wikipedia.org/wiki/Iterative_proportional_fitting\" target={\"_blank\"}>Iterative Proportional Fitting</Link> finds a joint distribution that matches the marginals, while trying to stay as close to the sample distribution as possible. <Link style={{color:\"blue\"}} variant=\"outline\" href=\"\" target={\"_blank\"}>Iterative Proportional Updating</Link> is a heuristic iterative approach which can simultaneously match or fit to multiple distributions (constraints). Finally, <Link style={{color:\"blue\"}} variant=\"outline\" href=\"https://arxiv.org/abs/1907.00503\" target={\"_blank\"}>Conditional-Tabular Generative Adversarial Networks</Link> is a method to model the tabular data distribution and sample rows from the distribution. A <Link style={{color:\"blue\"}} variant=\"outline\" href=\"https://en.wikipedia.org/wiki/Generative_adversarial_network\" target={\"_blank\"}>Generative Adversarial Network</Link> (GAN) uses two ``competing'' neural networks, the generator and the discriminator. The generator creates realistic samples with the goal that the discriminator should be unable to differentiate between a real sample and a generated sample. In this zero-sum game, capabilities of both the networks are enhanced iteratively. Critically, our techniques are designed to work seamlessly across data-scarce and data-rich areas; even if a particular area has error-prone or missing data, a synthetic population can still be generated, albeit of a lower quality.\n\n            The synthetic population is generated using statistical methods and machine learning algorithms which are flexible enough to generate data at various administrative levels, i.e., at the level of cities, districts, states, or even the entire country, depending on the level of granularity required by the modeller. The primary sources of data for the generation of such a population are datasets from the Census of India, the India Human Development Survey (IHDS), the National Sample Survey (NSS), the National Family Health Welfare Survey (NFHS), and the Gridded Population of the World (GPW). A number of other sources are also used to fine-tune and validate the above datasets.\n            </Text>\n\n            <Heading size=\"sm\" m={2} p={2}>The population generation process</Heading>\n\n            <Text m={2} p={2} align='justify'>\n              We use IPF to generate a base population, using census data for the demographics and the IHDS survey dataset for personal and household attributes. The base population  thus consists of individual data and household data. We assign each household to an administrative unit within a district.\n\n              We also experimented with CTGAN to generate a base population. The major advantage of IPU over CTGAN is that IPU is capable of matching individual level and household level characteristics of an individual while making sure that members of the household have a realistic age and gender joint distribution.\n\n              To assign job labels to individuals, the relevant data from the IHDS dataset is used. For the time-being, we classify individuals below the age of 18 as students, but could easily relax this assumption. A subset of the population is also assumed be home-bound. This subset consists of unemployed individuals, homemakers, infants and children under the age 3 and elderly people over the retirement age. We use data from the NSS survey to determine the percentage of adult males and females in a city who are home-bound. A random independent sample is drawn from a Bernoulli distribution with this gender-based marginal value as a parameter in order to decide if an individual will be home-bound or not.\n\n              Each student in the population is assigned a school. Similarly, each working individual is assigned a workplace based upon their job label. We generate a synthetic latitude and longitude pair for each home, school and workplace in our dataset using <Link style={{color:\"blue\"}} variant=\"outline\" href=\"https://gadm.org/\" target={\"_blank\"}>GADM</Link> grid population density data. We select a subset of grid points that lie within a given geographical boundary and sample grid-points with replacement grid points from the subset, weighing each point by the population density in the associated grid. We add independent random noise drawn from a uniform distribution to the latitudes and longitudes, rejecting those samples which fall outside the given geographical boundary. We follow this process to generate synthetic geolocation data for households, schools and workplaces.\n\n              To assign an individual a school, we sample from the list of schools within that geographical boundary, weighing each school by the inverse of the euclidean distance between it and the individual's home. This weighting factor increases the probability of assigning an individual a school that is closer to their home. We follow a similar method to assign workplaces to adults. Additionally, based on every individual's job label, a workplace is assigned at random from a suitable subset of allowed workplaces.\n\n              A number of additional attributes are included in our synthetic population, including whether an individual uses public transport or whether an individual is an essential worker. These values are assigned using the individual's job label.\n            </Text>\n\n            <Heading size=\"sm\" m={2} p={2}>Verifying the generated population</Heading>\n            <Text m={2} p={2} align='justify'>\n\n            To compare and verify the generated synthetic population with the real data, multiple metrics such as Statistical (CS-test, KS-test, Bhattacharya distance), Likelihood, and Machine Learning Efficacy Regression are used. For example, the Bhattacharya distance -- a distance measure to measure the statistical similarity between two samples in the same space -- is used to compare the various versions of synthetic population. The greater the overlap between two samples, the lower the Bhattacharya distance. As such, this metric can be used to measure similarity for the age-height and age-weight joint distributions.\n\n            Critically, our techniques are designed to work seamlessly across data-scarce and data-rich areas; even if a particular area has error-prone or missing data, we can still generate a synthetic population, albeit of slightly poorer quality, but without affecting anything else.\n          </Text>\n\n          <Flex  p={4} mb={2}>\n\n          <InnerLink to='/viz_engine'>\n          <Button leftIcon={<AiOutlineArrowLeft/>}>\n              Visualization Engine\n            </Button>\n          </InnerLink> \n\n          <Spacer></Spacer>\n\n          <InnerLink to='/simulation_engine'>\n          <Button rightIcon={<AiOutlineArrowRight/>}>\n              Simulation Engine\n            </Button>\n          </InnerLink>\n        </Flex>\n\n        </Container>\n        </Center>\n        </ChakraProvider>\n\n    </>\n  )\n}\n\nexport default SyntheticPopulation\n","import React from 'react'\nimport theme from '../theme.js';\nimport Header from '../components/sections/Header.js';\nimport {Link as InnerLink} from 'react-router-dom'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport {\n    ChakraProvider,\n    Center,\n    Button,\n    Image,\n    Box,\n    HStack,\n    Vstack,\n    Text,\n    Link,\n    VStack,\n    Flex,\n    Code,\n    Heading,\n    Grid,\n    Container,\n    Spacer,\n    Table,\n    Thead,\n    Tbody,\n    Tfoot,\n    Tr,\n    Th,\n    Td,\n    TableCaption,\n    } from '@chakra-ui/react'\nimport { AiOutlineArrowLeft,AiOutlineArrowRight } from \"react-icons/ai\";\n\nfunction VizEngine() {\n  return (\n   <>\n           <ChakraProvider theme={theme}>\n        <Header bg=\"#392F74\" ></Header>\n        </ChakraProvider>\n        <Center>\n        <Container maxW='container.xl'>\n        <Center><Heading size=\"lg\" m={2} p={2}>The Visualization Engine</Heading></Center>\n\n            <Text m={2} p={2} align='justify'>\n            Using the simulation engine, the modeller may define an output file containing, for example, the number of individuals in different disease states for every time step. The visualization engine can then read this output and create multiple dashboards with different types of graphs that can help in analyzing the results and in visualizing them.<br/><br/>\n            The visualisation engine is self-contained, and can accept and visualize any CSV data file. Each dashboard can possess a combination of different graphs and charts, from line-graphs, histograms, and pie-charts. Additionally, the visualization engine can also represent GIS data in the geoJSON format to plot heat maps and choropleths, which can either be static, or which can change with time based on the data provided in the input CSV file.<br/><br/>\n\n            The visualisation engine is self-contained, and can accept and visualize any CSV data file. Each dashboard can possess a combination of different graphs and charts, from line-graphs, histograms, and pie-charts. Additionally, the visualization engine can also represent GIS data in the geoJSON format to plot heat maps and choropleths, which can either be static, or which can change with time based on the data provided in the input CSV file, shown below.\n\n            <Box p={2} m={2} backgroundColor='white'>\n            <Center>\n              <Image width=\"30%\" ml=\"7%\"mr=\"7%\" pt=\"5%\" pb=\"5%\" src={require(\"../assets/mumbai.gif\")}></Image>\n              </Center>\n            </Box>\n            </Text>\n\n            <Heading size=\"md\" m={2} p={2}>Features of the Visualization Engine</Heading>\n\n            <Text m={2} p={2} align='justify'>\n\n             The visualization engine provides a variety of different features:<br/><br/>\n\n\n            <Heading size=\"s\">Data Import: </Heading> The visualization engine can import data in ZIP, CSV, and GeoJSON formats. The user can add, delete, and link files from different dashboards and can also add columns with custom formulae.<br/><br/>\n\n            <Heading size=\"s\"> Charts: </Heading>The user can represent time-series data as a line-graph. Additionally, bar charts, histograms, and pie charts can be used to study aggregated data. Geographical information and data can also be visualized. Spatial variations in data can be visualized using either heatmaps or choropleths. Heatmaps visualize data in the form of ``hot'' or ``cold'' spots, with a warm-to-cool color scheme. Choropleth maps can also be used to visualize how quantities vary across a fixed geographic area like a district or state, while simultaneously showing the extent of variation within a region.<br/><br/>\n\n            <Heading size='s'> Project & Dashboard management: </Heading> Users can create a Project which can have multiple individual dashboards for better analysis.<br/><br/>\n\n            Users can add, edit, and delete projects and dashboards for better management. Dashboards are auto-saved to avoid data loss.\n            Users can easily add, edit, duplicate, and delete widgets and charts in each dashboard. Dashboards can be duplicated to allow users to duplicate certain design choices and widget configurations. Each widget also allows the users to export the output either as raster or vector data using the PNG and SVG file formats respectively.\n\n            </Text>\n            <Flex  p={4} mb={2}>\n\n        <InnerLink to='/simulation_engine'>\n            <Button leftIcon={<AiOutlineArrowLeft/>}>\n              Simulation Engine\n            </Button>\n          </InnerLink>\n          \n          <Spacer></Spacer>\n\n          <InnerLink to='/synthetic_population'>\n            <Button rightIcon={<AiOutlineArrowRight/>}>\n              Synthetic Population\n            </Button>\n          </InnerLink>\n        </Flex>\n\n        </Container>\n        </Center>\n \n   </>\n  )\n}\n\nexport default VizEngine","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport {\n  ChakraProvider,\n  Center,\n  Image,\n  Box,\n  HStack,\n  Vstack,\n  Text,\n  Link,\n  VStack,\n  Flex,\n  Code,\n  Heading,\n  Grid,\n  Container,\n  Spacer,\n} from '@chakra-ui/react';\nimport {\n  Table,\n  Thead,\n  Tbody,\n  Tfoot,\n  Tr,\n  Th,\n  Td,\n  TableCaption,\n} from '@chakra-ui/react'\nimport {\n  List,\n  ListItem,\n  ListIcon,\n  OrderedList,\n  UnorderedList,\n} from '@chakra-ui/react'\nimport theme from './theme.js';\nimport Landing from \"./pages/Landing\";\nimport Publications from \"./pages/Publications\";\nimport People from \"./pages/People\";\nimport Projects from \"./pages/Projects\";\n\nimport LandingLayout from \"./components/layouts/LandingLayout\";\nimport Header from \"./components/sections/Header\";\nimport Footer from \"./components/sections/Footer\";\nimport Footerv2 from \"./components/sections/Footerv2.js\";\nimport SimulationEngine  from \"./pages/SimulationEngine.js\";\nimport SyntheticPopulation from \"./pages/SyntheticPopulation.js\";\nimport VizEngine from \"./pages/VizEngine.js\";\n\nexport default function App() {\n  return (\n    <Router>\n      <Switch>\n\n      <Route path=\"/people\">\n          <ChakraProvider theme={theme}>\n          <LandingLayout >  <People /></LandingLayout>\n          <Footerv2/>\n          </ChakraProvider>\n        </Route>\n        <Route path=\"/components\">\n            <ChakraProvider theme={theme}>\n            <LandingLayout > <Projects /> </LandingLayout>\n                {/* <Footer /> */}\n                <Footerv2/>\n            </ChakraProvider>\n        </Route>\n\n        <Route path=\"/faq\">\n          <Landing />\n        </Route>\n\n        <Route path=\"/about\">\n        <ChakraProvider theme={theme}>\n        <div>\n          Hello!\n        </div>\n    </ChakraProvider>\n        </Route>\n\n        <Route path=\"/media\">\n        <ChakraProvider theme={theme}>\n        <LandingLayout>\n          Work in Progress...\n          </LandingLayout>\n    </ChakraProvider>\n        </Route>\n\n\n      <Route path=\"/collaborations\">\n        <ChakraProvider theme={theme}>\n        <Header bg=\"#392F74\" ></Header>\n        <div style={{margin:\"auto\",width:\"50%\",paddingLeft:\"23vw\"}}>\n            Work in Progress..\n            </div>\n\n        </ChakraProvider>\n      </Route>\n\n\n      <Route path=\"/simulation_engine\">\n      <SimulationEngine></SimulationEngine>\n      <Footerv2></Footerv2>\n      </Route>\n\n      <Route path=\"/synthetic_population\">\n        <SyntheticPopulation/>\n        <Footerv2></Footerv2>\n        </Route>\n\n      <Route path=\"/viz_engine\">\n        <VizEngine/>\n        <Footerv2></Footerv2>\n      </Route>\n\n      <Route path=\"/publications\">\n        <ChakraProvider theme={theme}>\n        <Header bg=\"#392F74\" ></Header>\n          {/*<Publications />*/}\n            <div style={{margin:\"auto\",width:\"50%\",paddingLeft:\"23vw\"}}>\n            Work in Progress...\n            </div>\n          {/* <Footer /> */}\n          </ChakraProvider>\n        </Route>\n\n        <Route path=\"/\">\n          <Landing />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","import { extendTheme } from \"@chakra-ui/react\";\n\nconst colors = {\n  primary: {\n    100: \"#E5FCF1\",\n    200: \"#27EF96\",\n    300: \"#10DE82\",\n    400: \"#0EBE6F\",\n    500: \"#0CA25F\",\n    600: \"#0A864F\",\n    700: \"#086F42\",\n    800: \"#075C37\",\n    900: \"#064C2E\"\n  }\n};\n\nconst customTheme = extendTheme({ colors });\n\nexport default customTheme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nimport App from \"./App\";\nimport customTheme from \"./utils/theme\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={customTheme}>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  rootElement\n);\n","module.exports = __webpack_public_path__ + \"static/media/Logo_color_bg.65e8f3fb.png\";","module.exports = __webpack_public_path__ + \"static/media/Logo_BW_on_dark.a9735e5d.svg\";"],"sourceRoot":""}